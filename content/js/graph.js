/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 70044.0, "series": [{"data": [[0.0, 132.0], [0.1, 135.0], [0.2, 148.0], [0.3, 153.0], [0.4, 168.0], [0.5, 177.0], [0.6, 187.0], [0.7, 191.0], [0.8, 205.0], [0.9, 235.0], [1.0, 246.0], [1.1, 256.0], [1.2, 263.0], [1.3, 274.0], [1.4, 285.0], [1.5, 307.0], [1.6, 332.0], [1.7, 336.0], [1.8, 354.0], [1.9, 367.0], [2.0, 380.0], [2.1, 390.0], [2.2, 391.0], [2.3, 398.0], [2.4, 415.0], [2.5, 423.0], [2.6, 432.0], [2.7, 439.0], [2.8, 448.0], [2.9, 449.0], [3.0, 454.0], [3.1, 455.0], [3.2, 457.0], [3.3, 466.0], [3.4, 469.0], [3.5, 480.0], [3.6, 489.0], [3.7, 494.0], [3.8, 501.0], [3.9, 505.0], [4.0, 507.0], [4.1, 511.0], [4.2, 514.0], [4.3, 526.0], [4.4, 534.0], [4.5, 538.0], [4.6, 542.0], [4.7, 552.0], [4.8, 558.0], [4.9, 561.0], [5.0, 566.0], [5.1, 569.0], [5.2, 577.0], [5.3, 583.0], [5.4, 585.0], [5.5, 590.0], [5.6, 601.0], [5.7, 606.0], [5.8, 612.0], [5.9, 621.0], [6.0, 629.0], [6.1, 634.0], [6.2, 645.0], [6.3, 647.0], [6.4, 657.0], [6.5, 671.0], [6.6, 675.0], [6.7, 677.0], [6.8, 679.0], [6.9, 683.0], [7.0, 687.0], [7.1, 693.0], [7.2, 698.0], [7.3, 706.0], [7.4, 709.0], [7.5, 713.0], [7.6, 718.0], [7.7, 719.0], [7.8, 730.0], [7.9, 735.0], [8.0, 738.0], [8.1, 747.0], [8.2, 750.0], [8.3, 753.0], [8.4, 757.0], [8.5, 760.0], [8.6, 761.0], [8.7, 766.0], [8.8, 768.0], [8.9, 773.0], [9.0, 784.0], [9.1, 792.0], [9.2, 800.0], [9.3, 806.0], [9.4, 810.0], [9.5, 818.0], [9.6, 825.0], [9.7, 827.0], [9.8, 833.0], [9.9, 842.0], [10.0, 846.0], [10.1, 848.0], [10.2, 852.0], [10.3, 859.0], [10.4, 863.0], [10.5, 867.0], [10.6, 871.0], [10.7, 882.0], [10.8, 883.0], [10.9, 887.0], [11.0, 891.0], [11.1, 898.0], [11.2, 906.0], [11.3, 908.0], [11.4, 910.0], [11.5, 914.0], [11.6, 922.0], [11.7, 925.0], [11.8, 928.0], [11.9, 933.0], [12.0, 939.0], [12.1, 946.0], [12.2, 948.0], [12.3, 952.0], [12.4, 959.0], [12.5, 962.0], [12.6, 966.0], [12.7, 967.0], [12.8, 972.0], [12.9, 976.0], [13.0, 979.0], [13.1, 980.0], [13.2, 985.0], [13.3, 987.0], [13.4, 993.0], [13.5, 996.0], [13.6, 1002.0], [13.7, 1004.0], [13.8, 1006.0], [13.9, 1008.0], [14.0, 1009.0], [14.1, 1010.0], [14.2, 1014.0], [14.3, 1014.0], [14.4, 1022.0], [14.5, 1025.0], [14.6, 1033.0], [14.7, 1040.0], [14.8, 1042.0], [14.9, 1050.0], [15.0, 1053.0], [15.1, 1058.0], [15.2, 1063.0], [15.3, 1064.0], [15.4, 1067.0], [15.5, 1069.0], [15.6, 1082.0], [15.7, 1083.0], [15.8, 1086.0], [15.9, 1088.0], [16.0, 1089.0], [16.1, 1092.0], [16.2, 1095.0], [16.3, 1107.0], [16.4, 1110.0], [16.5, 1114.0], [16.6, 1116.0], [16.7, 1120.0], [16.8, 1123.0], [16.9, 1125.0], [17.0, 1129.0], [17.1, 1133.0], [17.2, 1134.0], [17.3, 1136.0], [17.4, 1139.0], [17.5, 1141.0], [17.6, 1142.0], [17.7, 1144.0], [17.8, 1147.0], [17.9, 1148.0], [18.0, 1148.0], [18.1, 1151.0], [18.2, 1158.0], [18.3, 1162.0], [18.4, 1168.0], [18.5, 1170.0], [18.6, 1174.0], [18.7, 1178.0], [18.8, 1183.0], [18.9, 1193.0], [19.0, 1197.0], [19.1, 1201.0], [19.2, 1203.0], [19.3, 1208.0], [19.4, 1208.0], [19.5, 1212.0], [19.6, 1217.0], [19.7, 1223.0], [19.8, 1228.0], [19.9, 1230.0], [20.0, 1234.0], [20.1, 1242.0], [20.2, 1244.0], [20.3, 1247.0], [20.4, 1250.0], [20.5, 1251.0], [20.6, 1254.0], [20.7, 1256.0], [20.8, 1262.0], [20.9, 1264.0], [21.0, 1268.0], [21.1, 1269.0], [21.2, 1275.0], [21.3, 1277.0], [21.4, 1280.0], [21.5, 1282.0], [21.6, 1287.0], [21.7, 1289.0], [21.8, 1298.0], [21.9, 1301.0], [22.0, 1308.0], [22.1, 1314.0], [22.2, 1321.0], [22.3, 1324.0], [22.4, 1325.0], [22.5, 1329.0], [22.6, 1331.0], [22.7, 1335.0], [22.8, 1340.0], [22.9, 1346.0], [23.0, 1348.0], [23.1, 1351.0], [23.2, 1353.0], [23.3, 1354.0], [23.4, 1360.0], [23.5, 1365.0], [23.6, 1366.0], [23.7, 1370.0], [23.8, 1374.0], [23.9, 1381.0], [24.0, 1385.0], [24.1, 1389.0], [24.2, 1392.0], [24.3, 1394.0], [24.4, 1399.0], [24.5, 1401.0], [24.6, 1406.0], [24.7, 1412.0], [24.8, 1416.0], [24.9, 1422.0], [25.0, 1426.0], [25.1, 1428.0], [25.2, 1431.0], [25.3, 1439.0], [25.4, 1441.0], [25.5, 1448.0], [25.6, 1451.0], [25.7, 1455.0], [25.8, 1463.0], [25.9, 1466.0], [26.0, 1472.0], [26.1, 1476.0], [26.2, 1481.0], [26.3, 1484.0], [26.4, 1487.0], [26.5, 1488.0], [26.6, 1494.0], [26.7, 1497.0], [26.8, 1508.0], [26.9, 1513.0], [27.0, 1516.0], [27.1, 1520.0], [27.2, 1523.0], [27.3, 1531.0], [27.4, 1532.0], [27.5, 1541.0], [27.6, 1546.0], [27.7, 1554.0], [27.8, 1555.0], [27.9, 1562.0], [28.0, 1569.0], [28.1, 1572.0], [28.2, 1576.0], [28.3, 1579.0], [28.4, 1581.0], [28.5, 1583.0], [28.6, 1584.0], [28.7, 1589.0], [28.8, 1592.0], [28.9, 1598.0], [29.0, 1602.0], [29.1, 1605.0], [29.2, 1607.0], [29.3, 1611.0], [29.4, 1613.0], [29.5, 1616.0], [29.6, 1621.0], [29.7, 1625.0], [29.8, 1629.0], [29.9, 1637.0], [30.0, 1641.0], [30.1, 1645.0], [30.2, 1655.0], [30.3, 1656.0], [30.4, 1656.0], [30.5, 1660.0], [30.6, 1665.0], [30.7, 1675.0], [30.8, 1677.0], [30.9, 1682.0], [31.0, 1685.0], [31.1, 1688.0], [31.2, 1692.0], [31.3, 1695.0], [31.4, 1697.0], [31.5, 1702.0], [31.6, 1707.0], [31.7, 1711.0], [31.8, 1714.0], [31.9, 1719.0], [32.0, 1723.0], [32.1, 1725.0], [32.2, 1730.0], [32.3, 1736.0], [32.4, 1739.0], [32.5, 1749.0], [32.6, 1750.0], [32.7, 1755.0], [32.8, 1757.0], [32.9, 1760.0], [33.0, 1762.0], [33.1, 1765.0], [33.2, 1768.0], [33.3, 1776.0], [33.4, 1778.0], [33.5, 1787.0], [33.6, 1792.0], [33.7, 1795.0], [33.8, 1801.0], [33.9, 1804.0], [34.0, 1808.0], [34.1, 1809.0], [34.2, 1814.0], [34.3, 1819.0], [34.4, 1824.0], [34.5, 1826.0], [34.6, 1827.0], [34.7, 1833.0], [34.8, 1834.0], [34.9, 1837.0], [35.0, 1841.0], [35.1, 1844.0], [35.2, 1847.0], [35.3, 1848.0], [35.4, 1851.0], [35.5, 1852.0], [35.6, 1857.0], [35.7, 1860.0], [35.8, 1864.0], [35.9, 1866.0], [36.0, 1868.0], [36.1, 1871.0], [36.2, 1878.0], [36.3, 1879.0], [36.4, 1885.0], [36.5, 1888.0], [36.6, 1894.0], [36.7, 1898.0], [36.8, 1900.0], [36.9, 1905.0], [37.0, 1912.0], [37.1, 1914.0], [37.2, 1922.0], [37.3, 1924.0], [37.4, 1929.0], [37.5, 1932.0], [37.6, 1940.0], [37.7, 1940.0], [37.8, 1946.0], [37.9, 1949.0], [38.0, 1952.0], [38.1, 1953.0], [38.2, 1956.0], [38.3, 1957.0], [38.4, 1959.0], [38.5, 1963.0], [38.6, 1965.0], [38.7, 1966.0], [38.8, 1969.0], [38.9, 1971.0], [39.0, 1972.0], [39.1, 1976.0], [39.2, 1979.0], [39.3, 1980.0], [39.4, 1982.0], [39.5, 1982.0], [39.6, 1986.0], [39.7, 1987.0], [39.8, 1991.0], [39.9, 1993.0], [40.0, 1997.0], [40.1, 2001.0], [40.2, 2003.0], [40.3, 2009.0], [40.4, 2013.0], [40.5, 2017.0], [40.6, 2018.0], [40.7, 2019.0], [40.8, 2023.0], [40.9, 2026.0], [41.0, 2030.0], [41.1, 2036.0], [41.2, 2040.0], [41.3, 2044.0], [41.4, 2047.0], [41.5, 2053.0], [41.6, 2054.0], [41.7, 2057.0], [41.8, 2064.0], [41.9, 2070.0], [42.0, 2074.0], [42.1, 2077.0], [42.2, 2080.0], [42.3, 2086.0], [42.4, 2090.0], [42.5, 2095.0], [42.6, 2103.0], [42.7, 2108.0], [42.8, 2115.0], [42.9, 2119.0], [43.0, 2123.0], [43.1, 2129.0], [43.2, 2132.0], [43.3, 2136.0], [43.4, 2146.0], [43.5, 2154.0], [43.6, 2155.0], [43.7, 2160.0], [43.8, 2167.0], [43.9, 2168.0], [44.0, 2169.0], [44.1, 2171.0], [44.2, 2174.0], [44.3, 2177.0], [44.4, 2183.0], [44.5, 2191.0], [44.6, 2192.0], [44.7, 2197.0], [44.8, 2200.0], [44.9, 2208.0], [45.0, 2209.0], [45.1, 2214.0], [45.2, 2220.0], [45.3, 2225.0], [45.4, 2227.0], [45.5, 2229.0], [45.6, 2231.0], [45.7, 2233.0], [45.8, 2238.0], [45.9, 2241.0], [46.0, 2243.0], [46.1, 2251.0], [46.2, 2258.0], [46.3, 2265.0], [46.4, 2272.0], [46.5, 2275.0], [46.6, 2277.0], [46.7, 2281.0], [46.8, 2284.0], [46.9, 2287.0], [47.0, 2288.0], [47.1, 2290.0], [47.2, 2294.0], [47.3, 2296.0], [47.4, 2299.0], [47.5, 2302.0], [47.6, 2311.0], [47.7, 2316.0], [47.8, 2324.0], [47.9, 2330.0], [48.0, 2333.0], [48.1, 2338.0], [48.2, 2340.0], [48.3, 2344.0], [48.4, 2346.0], [48.5, 2349.0], [48.6, 2355.0], [48.7, 2360.0], [48.8, 2368.0], [48.9, 2375.0], [49.0, 2378.0], [49.1, 2382.0], [49.2, 2386.0], [49.3, 2389.0], [49.4, 2391.0], [49.5, 2395.0], [49.6, 2400.0], [49.7, 2405.0], [49.8, 2411.0], [49.9, 2416.0], [50.0, 2418.0], [50.1, 2423.0], [50.2, 2425.0], [50.3, 2428.0], [50.4, 2438.0], [50.5, 2441.0], [50.6, 2442.0], [50.7, 2444.0], [50.8, 2446.0], [50.9, 2448.0], [51.0, 2451.0], [51.1, 2452.0], [51.2, 2455.0], [51.3, 2457.0], [51.4, 2461.0], [51.5, 2462.0], [51.6, 2464.0], [51.7, 2467.0], [51.8, 2470.0], [51.9, 2480.0], [52.0, 2487.0], [52.1, 2490.0], [52.2, 2493.0], [52.3, 2501.0], [52.4, 2502.0], [52.5, 2504.0], [52.6, 2509.0], [52.7, 2510.0], [52.8, 2513.0], [52.9, 2519.0], [53.0, 2521.0], [53.1, 2523.0], [53.2, 2526.0], [53.3, 2532.0], [53.4, 2533.0], [53.5, 2537.0], [53.6, 2538.0], [53.7, 2542.0], [53.8, 2546.0], [53.9, 2556.0], [54.0, 2561.0], [54.1, 2563.0], [54.2, 2566.0], [54.3, 2571.0], [54.4, 2574.0], [54.5, 2582.0], [54.6, 2588.0], [54.7, 2591.0], [54.8, 2596.0], [54.9, 2600.0], [55.0, 2602.0], [55.1, 2604.0], [55.2, 2607.0], [55.3, 2613.0], [55.4, 2617.0], [55.5, 2622.0], [55.6, 2628.0], [55.7, 2634.0], [55.8, 2638.0], [55.9, 2643.0], [56.0, 2644.0], [56.1, 2647.0], [56.2, 2648.0], [56.3, 2656.0], [56.4, 2658.0], [56.5, 2665.0], [56.6, 2678.0], [56.7, 2684.0], [56.8, 2696.0], [56.9, 2700.0], [57.0, 2707.0], [57.1, 2709.0], [57.2, 2712.0], [57.3, 2717.0], [57.4, 2720.0], [57.5, 2723.0], [57.6, 2732.0], [57.7, 2735.0], [57.8, 2737.0], [57.9, 2741.0], [58.0, 2748.0], [58.1, 2750.0], [58.2, 2753.0], [58.3, 2760.0], [58.4, 2763.0], [58.5, 2765.0], [58.6, 2768.0], [58.7, 2773.0], [58.8, 2776.0], [58.9, 2783.0], [59.0, 2787.0], [59.1, 2793.0], [59.2, 2800.0], [59.3, 2801.0], [59.4, 2804.0], [59.5, 2810.0], [59.6, 2812.0], [59.7, 2820.0], [59.8, 2826.0], [59.9, 2833.0], [60.0, 2837.0], [60.1, 2839.0], [60.2, 2844.0], [60.3, 2851.0], [60.4, 2856.0], [60.5, 2859.0], [60.6, 2861.0], [60.7, 2867.0], [60.8, 2873.0], [60.9, 2880.0], [61.0, 2885.0], [61.1, 2893.0], [61.2, 2897.0], [61.3, 2900.0], [61.4, 2901.0], [61.5, 2904.0], [61.6, 2906.0], [61.7, 2908.0], [61.8, 2911.0], [61.9, 2915.0], [62.0, 2922.0], [62.1, 2926.0], [62.2, 2928.0], [62.3, 2929.0], [62.4, 2933.0], [62.5, 2936.0], [62.6, 2938.0], [62.7, 2944.0], [62.8, 2949.0], [62.9, 2957.0], [63.0, 2960.0], [63.1, 2967.0], [63.2, 2976.0], [63.3, 2994.0], [63.4, 2999.0], [63.5, 3003.0], [63.6, 3006.0], [63.7, 3013.0], [63.8, 3021.0], [63.9, 3024.0], [64.0, 3028.0], [64.1, 3038.0], [64.2, 3043.0], [64.3, 3045.0], [64.4, 3052.0], [64.5, 3056.0], [64.6, 3061.0], [64.7, 3069.0], [64.8, 3071.0], [64.9, 3078.0], [65.0, 3087.0], [65.1, 3092.0], [65.2, 3094.0], [65.3, 3097.0], [65.4, 3105.0], [65.5, 3106.0], [65.6, 3109.0], [65.7, 3113.0], [65.8, 3115.0], [65.9, 3124.0], [66.0, 3128.0], [66.1, 3141.0], [66.2, 3146.0], [66.3, 3158.0], [66.4, 3161.0], [66.5, 3164.0], [66.6, 3169.0], [66.7, 3172.0], [66.8, 3178.0], [66.9, 3178.0], [67.0, 3181.0], [67.1, 3184.0], [67.2, 3189.0], [67.3, 3195.0], [67.4, 3203.0], [67.5, 3211.0], [67.6, 3216.0], [67.7, 3224.0], [67.8, 3226.0], [67.9, 3237.0], [68.0, 3242.0], [68.1, 3249.0], [68.2, 3250.0], [68.3, 3253.0], [68.4, 3254.0], [68.5, 3256.0], [68.6, 3261.0], [68.7, 3270.0], [68.8, 3274.0], [68.9, 3281.0], [69.0, 3284.0], [69.1, 3293.0], [69.2, 3302.0], [69.3, 3307.0], [69.4, 3316.0], [69.5, 3326.0], [69.6, 3334.0], [69.7, 3339.0], [69.8, 3347.0], [69.9, 3354.0], [70.0, 3361.0], [70.1, 3365.0], [70.2, 3371.0], [70.3, 3374.0], [70.4, 3377.0], [70.5, 3382.0], [70.6, 3389.0], [70.7, 3392.0], [70.8, 3394.0], [70.9, 3396.0], [71.0, 3405.0], [71.1, 3409.0], [71.2, 3412.0], [71.3, 3417.0], [71.4, 3424.0], [71.5, 3428.0], [71.6, 3429.0], [71.7, 3437.0], [71.8, 3438.0], [71.9, 3442.0], [72.0, 3447.0], [72.1, 3452.0], [72.2, 3456.0], [72.3, 3464.0], [72.4, 3467.0], [72.5, 3472.0], [72.6, 3476.0], [72.7, 3480.0], [72.8, 3485.0], [72.9, 3492.0], [73.0, 3499.0], [73.1, 3504.0], [73.2, 3508.0], [73.3, 3516.0], [73.4, 3524.0], [73.5, 3534.0], [73.6, 3537.0], [73.7, 3545.0], [73.8, 3551.0], [73.9, 3557.0], [74.0, 3561.0], [74.1, 3573.0], [74.2, 3583.0], [74.3, 3584.0], [74.4, 3586.0], [74.5, 3593.0], [74.6, 3597.0], [74.7, 3601.0], [74.8, 3604.0], [74.9, 3608.0], [75.0, 3614.0], [75.1, 3625.0], [75.2, 3629.0], [75.3, 3632.0], [75.4, 3636.0], [75.5, 3642.0], [75.6, 3645.0], [75.7, 3647.0], [75.8, 3653.0], [75.9, 3656.0], [76.0, 3662.0], [76.1, 3668.0], [76.2, 3672.0], [76.3, 3674.0], [76.4, 3678.0], [76.5, 3686.0], [76.6, 3695.0], [76.7, 3702.0], [76.8, 3711.0], [76.9, 3716.0], [77.0, 3726.0], [77.1, 3731.0], [77.2, 3738.0], [77.3, 3741.0], [77.4, 3747.0], [77.5, 3755.0], [77.6, 3760.0], [77.7, 3769.0], [77.8, 3772.0], [77.9, 3791.0], [78.0, 3798.0], [78.1, 3799.0], [78.2, 3808.0], [78.3, 3814.0], [78.4, 3816.0], [78.5, 3826.0], [78.6, 3834.0], [78.7, 3839.0], [78.8, 3851.0], [78.9, 3857.0], [79.0, 3866.0], [79.1, 3872.0], [79.2, 3876.0], [79.3, 3887.0], [79.4, 3892.0], [79.5, 3898.0], [79.6, 3906.0], [79.7, 3907.0], [79.8, 3908.0], [79.9, 3913.0], [80.0, 3920.0], [80.1, 3925.0], [80.2, 3929.0], [80.3, 3931.0], [80.4, 3939.0], [80.5, 3951.0], [80.6, 3957.0], [80.7, 3963.0], [80.8, 3966.0], [80.9, 3974.0], [81.0, 3983.0], [81.1, 3990.0], [81.2, 3998.0], [81.3, 4020.0], [81.4, 4023.0], [81.5, 4028.0], [81.6, 4030.0], [81.7, 4041.0], [81.8, 4047.0], [81.9, 4053.0], [82.0, 4061.0], [82.1, 4065.0], [82.2, 4068.0], [82.3, 4073.0], [82.4, 4076.0], [82.5, 4077.0], [82.6, 4084.0], [82.7, 4095.0], [82.8, 4101.0], [82.9, 4107.0], [83.0, 4118.0], [83.1, 4124.0], [83.2, 4147.0], [83.3, 4152.0], [83.4, 4160.0], [83.5, 4163.0], [83.6, 4175.0], [83.7, 4185.0], [83.8, 4195.0], [83.9, 4201.0], [84.0, 4224.0], [84.1, 4228.0], [84.2, 4238.0], [84.3, 4252.0], [84.4, 4259.0], [84.5, 4265.0], [84.6, 4274.0], [84.7, 4288.0], [84.8, 4295.0], [84.9, 4304.0], [85.0, 4322.0], [85.1, 4329.0], [85.2, 4338.0], [85.3, 4344.0], [85.4, 4348.0], [85.5, 4355.0], [85.6, 4360.0], [85.7, 4373.0], [85.8, 4381.0], [85.9, 4389.0], [86.0, 4402.0], [86.1, 4407.0], [86.2, 4432.0], [86.3, 4442.0], [86.4, 4457.0], [86.5, 4476.0], [86.6, 4484.0], [86.7, 4495.0], [86.8, 4499.0], [86.9, 4502.0], [87.0, 4505.0], [87.1, 4507.0], [87.2, 4516.0], [87.3, 4525.0], [87.4, 4534.0], [87.5, 4536.0], [87.6, 4552.0], [87.7, 4560.0], [87.8, 4576.0], [87.9, 4587.0], [88.0, 4594.0], [88.1, 4601.0], [88.2, 4602.0], [88.3, 4614.0], [88.4, 4620.0], [88.5, 4629.0], [88.6, 4635.0], [88.7, 4644.0], [88.8, 4651.0], [88.9, 4664.0], [89.0, 4677.0], [89.1, 4683.0], [89.2, 4693.0], [89.3, 4695.0], [89.4, 4722.0], [89.5, 4726.0], [89.6, 4738.0], [89.7, 4751.0], [89.8, 4760.0], [89.9, 4771.0], [90.0, 4784.0], [90.1, 4793.0], [90.2, 4808.0], [90.3, 4822.0], [90.4, 4842.0], [90.5, 4853.0], [90.6, 4864.0], [90.7, 4885.0], [90.8, 4898.0], [90.9, 4908.0], [91.0, 4913.0], [91.1, 4926.0], [91.2, 4975.0], [91.3, 4982.0], [91.4, 5001.0], [91.5, 5024.0], [91.6, 5031.0], [91.7, 5052.0], [91.8, 5064.0], [91.9, 5069.0], [92.0, 5073.0], [92.1, 5086.0], [92.2, 5095.0], [92.3, 5104.0], [92.4, 5124.0], [92.5, 5131.0], [92.6, 5143.0], [92.7, 5190.0], [92.8, 5204.0], [92.9, 5234.0], [93.0, 5244.0], [93.1, 5267.0], [93.2, 5288.0], [93.3, 5313.0], [93.4, 5333.0], [93.5, 5365.0], [93.6, 5449.0], [93.7, 5464.0], [93.8, 5474.0], [93.9, 5513.0], [94.0, 5522.0], [94.1, 5571.0], [94.2, 5584.0], [94.3, 5597.0], [94.4, 5622.0], [94.5, 5659.0], [94.6, 5726.0], [94.7, 5797.0], [94.8, 5817.0], [94.9, 5863.0], [95.0, 5917.0], [95.1, 5938.0], [95.2, 5950.0], [95.3, 5962.0], [95.4, 6021.0], [95.5, 6041.0], [95.6, 6062.0], [95.7, 6090.0], [95.8, 6142.0], [95.9, 6211.0], [96.0, 6297.0], [96.1, 6350.0], [96.2, 6375.0], [96.3, 6436.0], [96.4, 6501.0], [96.5, 6556.0], [96.6, 6603.0], [96.7, 6654.0], [96.8, 6707.0], [96.9, 6795.0], [97.0, 6934.0], [97.1, 6999.0], [97.2, 7050.0], [97.3, 7169.0], [97.4, 7455.0], [97.5, 7658.0], [97.6, 7690.0], [97.7, 7890.0], [97.8, 8024.0], [97.9, 8131.0], [98.0, 8256.0], [98.1, 8503.0], [98.2, 8868.0], [98.3, 9069.0], [98.4, 9192.0], [98.5, 9348.0], [98.6, 9469.0], [98.7, 9679.0], [98.8, 9878.0], [98.9, 10085.0], [99.0, 10325.0], [99.1, 10585.0], [99.2, 11026.0], [99.3, 11276.0], [99.4, 11524.0], [99.5, 11885.0], [99.6, 12956.0], [99.7, 13234.0], [99.8, 17955.0], [99.9, 19653.0], [100.0, 36237.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[0.0, 100.0], [0.1, 131.0], [0.2, 149.0], [0.3, 166.0], [0.4, 179.0], [0.5, 192.0], [0.6, 199.0], [0.7, 209.0], [0.8, 217.0], [0.9, 235.0], [1.0, 242.0], [1.1, 247.0], [1.2, 259.0], [1.3, 267.0], [1.4, 276.0], [1.5, 283.0], [1.6, 288.0], [1.7, 291.0], [1.8, 297.0], [1.9, 306.0], [2.0, 307.0], [2.1, 317.0], [2.2, 323.0], [2.3, 334.0], [2.4, 342.0], [2.5, 348.0], [2.6, 354.0], [2.7, 361.0], [2.8, 363.0], [2.9, 369.0], [3.0, 373.0], [3.1, 382.0], [3.2, 389.0], [3.3, 397.0], [3.4, 403.0], [3.5, 409.0], [3.6, 416.0], [3.7, 418.0], [3.8, 424.0], [3.9, 430.0], [4.0, 436.0], [4.1, 443.0], [4.2, 446.0], [4.3, 458.0], [4.4, 465.0], [4.5, 478.0], [4.6, 483.0], [4.7, 486.0], [4.8, 491.0], [4.9, 499.0], [5.0, 502.0], [5.1, 519.0], [5.2, 529.0], [5.3, 533.0], [5.4, 538.0], [5.5, 547.0], [5.6, 556.0], [5.7, 560.0], [5.8, 565.0], [5.9, 571.0], [6.0, 572.0], [6.1, 581.0], [6.2, 585.0], [6.3, 589.0], [6.4, 605.0], [6.5, 610.0], [6.6, 614.0], [6.7, 620.0], [6.8, 624.0], [6.9, 630.0], [7.0, 632.0], [7.1, 636.0], [7.2, 645.0], [7.3, 655.0], [7.4, 661.0], [7.5, 668.0], [7.6, 672.0], [7.7, 680.0], [7.8, 693.0], [7.9, 697.0], [8.0, 709.0], [8.1, 713.0], [8.2, 724.0], [8.3, 731.0], [8.4, 736.0], [8.5, 743.0], [8.6, 751.0], [8.7, 756.0], [8.8, 766.0], [8.9, 775.0], [9.0, 795.0], [9.1, 805.0], [9.2, 807.0], [9.3, 812.0], [9.4, 815.0], [9.5, 821.0], [9.6, 828.0], [9.7, 847.0], [9.8, 848.0], [9.9, 857.0], [10.0, 863.0], [10.1, 874.0], [10.2, 887.0], [10.3, 895.0], [10.4, 909.0], [10.5, 927.0], [10.6, 930.0], [10.7, 945.0], [10.8, 959.0], [10.9, 980.0], [11.0, 992.0], [11.1, 1012.0], [11.2, 1035.0], [11.3, 1038.0], [11.4, 1042.0], [11.5, 1049.0], [11.6, 1050.0], [11.7, 1058.0], [11.8, 1062.0], [11.9, 1080.0], [12.0, 1085.0], [12.1, 1089.0], [12.2, 1096.0], [12.3, 1108.0], [12.4, 1110.0], [12.5, 1117.0], [12.6, 1124.0], [12.7, 1131.0], [12.8, 1142.0], [12.9, 1157.0], [13.0, 1164.0], [13.1, 1173.0], [13.2, 1176.0], [13.3, 1201.0], [13.4, 1208.0], [13.5, 1216.0], [13.6, 1218.0], [13.7, 1233.0], [13.8, 1248.0], [13.9, 1254.0], [14.0, 1271.0], [14.1, 1280.0], [14.2, 1283.0], [14.3, 1286.0], [14.4, 1295.0], [14.5, 1299.0], [14.6, 1300.0], [14.7, 1310.0], [14.8, 1316.0], [14.9, 1333.0], [15.0, 1337.0], [15.1, 1345.0], [15.2, 1351.0], [15.3, 1353.0], [15.4, 1367.0], [15.5, 1376.0], [15.6, 1378.0], [15.7, 1395.0], [15.8, 1411.0], [15.9, 1422.0], [16.0, 1455.0], [16.1, 1462.0], [16.2, 1465.0], [16.3, 1475.0], [16.4, 1482.0], [16.5, 1484.0], [16.6, 1493.0], [16.7, 1507.0], [16.8, 1511.0], [16.9, 1515.0], [17.0, 1519.0], [17.1, 1523.0], [17.2, 1534.0], [17.3, 1538.0], [17.4, 1544.0], [17.5, 1555.0], [17.6, 1563.0], [17.7, 1577.0], [17.8, 1590.0], [17.9, 1594.0], [18.0, 1605.0], [18.1, 1609.0], [18.2, 1612.0], [18.3, 1617.0], [18.4, 1626.0], [18.5, 1643.0], [18.6, 1649.0], [18.7, 1660.0], [18.8, 1666.0], [18.9, 1671.0], [19.0, 1676.0], [19.1, 1683.0], [19.2, 1687.0], [19.3, 1688.0], [19.4, 1698.0], [19.5, 1702.0], [19.6, 1712.0], [19.7, 1728.0], [19.8, 1753.0], [19.9, 1762.0], [20.0, 1765.0], [20.1, 1772.0], [20.2, 1784.0], [20.3, 1816.0], [20.4, 1822.0], [20.5, 1835.0], [20.6, 1839.0], [20.7, 1851.0], [20.8, 1855.0], [20.9, 1858.0], [21.0, 1862.0], [21.1, 1866.0], [21.2, 1873.0], [21.3, 1878.0], [21.4, 1898.0], [21.5, 1904.0], [21.6, 1911.0], [21.7, 1922.0], [21.8, 1934.0], [21.9, 1942.0], [22.0, 1950.0], [22.1, 1954.0], [22.2, 1956.0], [22.3, 1975.0], [22.4, 1982.0], [22.5, 2015.0], [22.6, 2027.0], [22.7, 2047.0], [22.8, 2059.0], [22.9, 2079.0], [23.0, 2082.0], [23.1, 2089.0], [23.2, 2094.0], [23.3, 2109.0], [23.4, 2119.0], [23.5, 2126.0], [23.6, 2138.0], [23.7, 2147.0], [23.8, 2156.0], [23.9, 2160.0], [24.0, 2166.0], [24.1, 2170.0], [24.2, 2174.0], [24.3, 2179.0], [24.4, 2182.0], [24.5, 2184.0], [24.6, 2201.0], [24.7, 2202.0], [24.8, 2211.0], [24.9, 2214.0], [25.0, 2216.0], [25.1, 2228.0], [25.2, 2244.0], [25.3, 2252.0], [25.4, 2261.0], [25.5, 2273.0], [25.6, 2283.0], [25.7, 2291.0], [25.8, 2294.0], [25.9, 2297.0], [26.0, 2302.0], [26.1, 2309.0], [26.2, 2329.0], [26.3, 2341.0], [26.4, 2352.0], [26.5, 2357.0], [26.6, 2359.0], [26.7, 2364.0], [26.8, 2377.0], [26.9, 2383.0], [27.0, 2391.0], [27.1, 2401.0], [27.2, 2407.0], [27.3, 2429.0], [27.4, 2441.0], [27.5, 2450.0], [27.6, 2461.0], [27.7, 2470.0], [27.8, 2472.0], [27.9, 2492.0], [28.0, 2521.0], [28.1, 2524.0], [28.2, 2525.0], [28.3, 2527.0], [28.4, 2546.0], [28.5, 2549.0], [28.6, 2565.0], [28.7, 2574.0], [28.8, 2581.0], [28.9, 2592.0], [29.0, 2597.0], [29.1, 2600.0], [29.2, 2606.0], [29.3, 2610.0], [29.4, 2629.0], [29.5, 2632.0], [29.6, 2665.0], [29.7, 2690.0], [29.8, 2708.0], [29.9, 2716.0], [30.0, 2722.0], [30.1, 2730.0], [30.2, 2741.0], [30.3, 2754.0], [30.4, 2765.0], [30.5, 2775.0], [30.6, 2776.0], [30.7, 2780.0], [30.8, 2792.0], [30.9, 2805.0], [31.0, 2825.0], [31.1, 2835.0], [31.2, 2849.0], [31.3, 2860.0], [31.4, 2868.0], [31.5, 2874.0], [31.6, 2875.0], [31.7, 2879.0], [31.8, 2882.0], [31.9, 2891.0], [32.0, 2899.0], [32.1, 2906.0], [32.2, 2918.0], [32.3, 2926.0], [32.4, 2939.0], [32.5, 2956.0], [32.6, 2962.0], [32.7, 2970.0], [32.8, 2972.0], [32.9, 2979.0], [33.0, 2982.0], [33.1, 2988.0], [33.2, 2997.0], [33.3, 3006.0], [33.4, 3012.0], [33.5, 3017.0], [33.6, 3040.0], [33.7, 3044.0], [33.8, 3059.0], [33.9, 3069.0], [34.0, 3076.0], [34.1, 3091.0], [34.2, 3110.0], [34.3, 3113.0], [34.4, 3118.0], [34.5, 3122.0], [34.6, 3131.0], [34.7, 3135.0], [34.8, 3142.0], [34.9, 3156.0], [35.0, 3159.0], [35.1, 3167.0], [35.2, 3171.0], [35.3, 3183.0], [35.4, 3207.0], [35.5, 3211.0], [35.6, 3225.0], [35.7, 3230.0], [35.8, 3238.0], [35.9, 3251.0], [36.0, 3261.0], [36.1, 3261.0], [36.2, 3272.0], [36.3, 3276.0], [36.4, 3285.0], [36.5, 3291.0], [36.6, 3298.0], [36.7, 3307.0], [36.8, 3311.0], [36.9, 3317.0], [37.0, 3325.0], [37.1, 3329.0], [37.2, 3330.0], [37.3, 3332.0], [37.4, 3348.0], [37.5, 3359.0], [37.6, 3381.0], [37.7, 3391.0], [37.8, 3402.0], [37.9, 3406.0], [38.0, 3415.0], [38.1, 3425.0], [38.2, 3431.0], [38.3, 3436.0], [38.4, 3446.0], [38.5, 3463.0], [38.6, 3469.0], [38.7, 3478.0], [38.8, 3481.0], [38.9, 3485.0], [39.0, 3489.0], [39.1, 3495.0], [39.2, 3499.0], [39.3, 3504.0], [39.4, 3518.0], [39.5, 3521.0], [39.6, 3526.0], [39.7, 3542.0], [39.8, 3551.0], [39.9, 3555.0], [40.0, 3560.0], [40.1, 3564.0], [40.2, 3568.0], [40.3, 3573.0], [40.4, 3583.0], [40.5, 3588.0], [40.6, 3599.0], [40.7, 3610.0], [40.8, 3621.0], [40.9, 3634.0], [41.0, 3642.0], [41.1, 3648.0], [41.2, 3654.0], [41.3, 3669.0], [41.4, 3676.0], [41.5, 3682.0], [41.6, 3695.0], [41.7, 3712.0], [41.8, 3715.0], [41.9, 3732.0], [42.0, 3740.0], [42.1, 3749.0], [42.2, 3755.0], [42.3, 3761.0], [42.4, 3766.0], [42.5, 3773.0], [42.6, 3780.0], [42.7, 3793.0], [42.8, 3795.0], [42.9, 3805.0], [43.0, 3814.0], [43.1, 3820.0], [43.2, 3824.0], [43.3, 3828.0], [43.4, 3832.0], [43.5, 3834.0], [43.6, 3846.0], [43.7, 3863.0], [43.8, 3865.0], [43.9, 3871.0], [44.0, 3895.0], [44.1, 3900.0], [44.2, 3916.0], [44.3, 3926.0], [44.4, 3944.0], [44.5, 3952.0], [44.6, 3961.0], [44.7, 3965.0], [44.8, 3975.0], [44.9, 3984.0], [45.0, 3990.0], [45.1, 3996.0], [45.2, 4006.0], [45.3, 4012.0], [45.4, 4025.0], [45.5, 4044.0], [45.6, 4046.0], [45.7, 4054.0], [45.8, 4059.0], [45.9, 4063.0], [46.0, 4068.0], [46.1, 4076.0], [46.2, 4082.0], [46.3, 4094.0], [46.4, 4099.0], [46.5, 4113.0], [46.6, 4121.0], [46.7, 4125.0], [46.8, 4131.0], [46.9, 4143.0], [47.0, 4151.0], [47.1, 4160.0], [47.2, 4168.0], [47.3, 4176.0], [47.4, 4189.0], [47.5, 4196.0], [47.6, 4213.0], [47.7, 4219.0], [47.8, 4231.0], [47.9, 4243.0], [48.0, 4243.0], [48.1, 4248.0], [48.2, 4258.0], [48.3, 4268.0], [48.4, 4276.0], [48.5, 4279.0], [48.6, 4283.0], [48.7, 4295.0], [48.8, 4315.0], [48.9, 4319.0], [49.0, 4326.0], [49.1, 4332.0], [49.2, 4336.0], [49.3, 4350.0], [49.4, 4359.0], [49.5, 4367.0], [49.6, 4380.0], [49.7, 4382.0], [49.8, 4383.0], [49.9, 4387.0], [50.0, 4396.0], [50.1, 4400.0], [50.2, 4407.0], [50.3, 4412.0], [50.4, 4424.0], [50.5, 4439.0], [50.6, 4443.0], [50.7, 4448.0], [50.8, 4451.0], [50.9, 4454.0], [51.0, 4468.0], [51.1, 4476.0], [51.2, 4484.0], [51.3, 4494.0], [51.4, 4505.0], [51.5, 4522.0], [51.6, 4528.0], [51.7, 4531.0], [51.8, 4532.0], [51.9, 4541.0], [52.0, 4543.0], [52.1, 4550.0], [52.2, 4557.0], [52.3, 4559.0], [52.4, 4564.0], [52.5, 4570.0], [52.6, 4582.0], [52.7, 4592.0], [52.8, 4597.0], [52.9, 4611.0], [53.0, 4615.0], [53.1, 4626.0], [53.2, 4637.0], [53.3, 4643.0], [53.4, 4658.0], [53.5, 4660.0], [53.6, 4672.0], [53.7, 4680.0], [53.8, 4692.0], [53.9, 4701.0], [54.0, 4704.0], [54.1, 4729.0], [54.2, 4736.0], [54.3, 4748.0], [54.4, 4757.0], [54.5, 4774.0], [54.6, 4776.0], [54.7, 4780.0], [54.8, 4787.0], [54.9, 4799.0], [55.0, 4806.0], [55.1, 4815.0], [55.2, 4825.0], [55.3, 4845.0], [55.4, 4852.0], [55.5, 4858.0], [55.6, 4868.0], [55.7, 4870.0], [55.8, 4873.0], [55.9, 4901.0], [56.0, 4912.0], [56.1, 4916.0], [56.2, 4927.0], [56.3, 4930.0], [56.4, 4943.0], [56.5, 4952.0], [56.6, 4959.0], [56.7, 4967.0], [56.8, 4970.0], [56.9, 4976.0], [57.0, 4984.0], [57.1, 4992.0], [57.2, 5005.0], [57.3, 5009.0], [57.4, 5016.0], [57.5, 5025.0], [57.6, 5041.0], [57.7, 5046.0], [57.8, 5057.0], [57.9, 5062.0], [58.0, 5067.0], [58.1, 5076.0], [58.2, 5088.0], [58.3, 5095.0], [58.4, 5102.0], [58.5, 5107.0], [58.6, 5110.0], [58.7, 5124.0], [58.8, 5126.0], [58.9, 5144.0], [59.0, 5152.0], [59.1, 5157.0], [59.2, 5170.0], [59.3, 5173.0], [59.4, 5185.0], [59.5, 5187.0], [59.6, 5194.0], [59.7, 5200.0], [59.8, 5219.0], [59.9, 5230.0], [60.0, 5236.0], [60.1, 5242.0], [60.2, 5254.0], [60.3, 5260.0], [60.4, 5267.0], [60.5, 5284.0], [60.6, 5292.0], [60.7, 5305.0], [60.8, 5322.0], [60.9, 5326.0], [61.0, 5330.0], [61.1, 5341.0], [61.2, 5345.0], [61.3, 5356.0], [61.4, 5368.0], [61.5, 5378.0], [61.6, 5388.0], [61.7, 5399.0], [61.8, 5405.0], [61.9, 5415.0], [62.0, 5426.0], [62.1, 5436.0], [62.2, 5456.0], [62.3, 5464.0], [62.4, 5475.0], [62.5, 5484.0], [62.6, 5489.0], [62.7, 5498.0], [62.8, 5502.0], [62.9, 5508.0], [63.0, 5519.0], [63.1, 5521.0], [63.2, 5531.0], [63.3, 5541.0], [63.4, 5549.0], [63.5, 5563.0], [63.6, 5566.0], [63.7, 5579.0], [63.8, 5585.0], [63.9, 5598.0], [64.0, 5604.0], [64.1, 5607.0], [64.2, 5614.0], [64.3, 5630.0], [64.4, 5634.0], [64.5, 5640.0], [64.6, 5657.0], [64.7, 5666.0], [64.8, 5673.0], [64.9, 5691.0], [65.0, 5701.0], [65.1, 5712.0], [65.2, 5726.0], [65.3, 5735.0], [65.4, 5737.0], [65.5, 5741.0], [65.6, 5755.0], [65.7, 5770.0], [65.8, 5782.0], [65.9, 5793.0], [66.0, 5800.0], [66.1, 5809.0], [66.2, 5829.0], [66.3, 5839.0], [66.4, 5851.0], [66.5, 5857.0], [66.6, 5878.0], [66.7, 5892.0], [66.8, 5900.0], [66.9, 5911.0], [67.0, 5933.0], [67.1, 5939.0], [67.2, 5950.0], [67.3, 5961.0], [67.4, 5966.0], [67.5, 5976.0], [67.6, 5986.0], [67.7, 5993.0], [67.8, 6003.0], [67.9, 6021.0], [68.0, 6029.0], [68.1, 6039.0], [68.2, 6044.0], [68.3, 6061.0], [68.4, 6074.0], [68.5, 6084.0], [68.6, 6091.0], [68.7, 6121.0], [68.8, 6129.0], [68.9, 6145.0], [69.0, 6155.0], [69.1, 6163.0], [69.2, 6165.0], [69.3, 6173.0], [69.4, 6178.0], [69.5, 6187.0], [69.6, 6193.0], [69.7, 6197.0], [69.8, 6206.0], [69.9, 6218.0], [70.0, 6224.0], [70.1, 6231.0], [70.2, 6246.0], [70.3, 6264.0], [70.4, 6272.0], [70.5, 6288.0], [70.6, 6306.0], [70.7, 6311.0], [70.8, 6323.0], [70.9, 6333.0], [71.0, 6337.0], [71.1, 6345.0], [71.2, 6351.0], [71.3, 6353.0], [71.4, 6364.0], [71.5, 6391.0], [71.6, 6393.0], [71.7, 6399.0], [71.8, 6400.0], [71.9, 6407.0], [72.0, 6424.0], [72.1, 6432.0], [72.2, 6440.0], [72.3, 6454.0], [72.4, 6464.0], [72.5, 6467.0], [72.6, 6475.0], [72.7, 6481.0], [72.8, 6497.0], [72.9, 6504.0], [73.0, 6516.0], [73.1, 6526.0], [73.2, 6533.0], [73.3, 6562.0], [73.4, 6567.0], [73.5, 6574.0], [73.6, 6576.0], [73.7, 6616.0], [73.8, 6618.0], [73.9, 6625.0], [74.0, 6644.0], [74.1, 6653.0], [74.2, 6681.0], [74.3, 6706.0], [74.4, 6721.0], [74.5, 6737.0], [74.6, 6756.0], [74.7, 6766.0], [74.8, 6773.0], [74.9, 6777.0], [75.0, 6784.0], [75.1, 6800.0], [75.2, 6812.0], [75.3, 6821.0], [75.4, 6830.0], [75.5, 6847.0], [75.6, 6864.0], [75.7, 6870.0], [75.8, 6883.0], [75.9, 6908.0], [76.0, 6915.0], [76.1, 6924.0], [76.2, 6940.0], [76.3, 6948.0], [76.4, 6955.0], [76.5, 6969.0], [76.6, 6982.0], [76.7, 6998.0], [76.8, 7002.0], [76.9, 7013.0], [77.0, 7032.0], [77.1, 7041.0], [77.2, 7065.0], [77.3, 7106.0], [77.4, 7117.0], [77.5, 7132.0], [77.6, 7151.0], [77.7, 7168.0], [77.8, 7182.0], [77.9, 7192.0], [78.0, 7200.0], [78.1, 7208.0], [78.2, 7227.0], [78.3, 7237.0], [78.4, 7253.0], [78.5, 7264.0], [78.6, 7268.0], [78.7, 7289.0], [78.8, 7301.0], [78.9, 7310.0], [79.0, 7323.0], [79.1, 7344.0], [79.2, 7361.0], [79.3, 7363.0], [79.4, 7382.0], [79.5, 7387.0], [79.6, 7406.0], [79.7, 7419.0], [79.8, 7433.0], [79.9, 7462.0], [80.0, 7466.0], [80.1, 7499.0], [80.2, 7511.0], [80.3, 7519.0], [80.4, 7529.0], [80.5, 7552.0], [80.6, 7568.0], [80.7, 7599.0], [80.8, 7613.0], [80.9, 7618.0], [81.0, 7624.0], [81.1, 7628.0], [81.2, 7639.0], [81.3, 7656.0], [81.4, 7664.0], [81.5, 7676.0], [81.6, 7691.0], [81.7, 7701.0], [81.8, 7722.0], [81.9, 7732.0], [82.0, 7737.0], [82.1, 7758.0], [82.2, 7789.0], [82.3, 7804.0], [82.4, 7828.0], [82.5, 7837.0], [82.6, 7848.0], [82.7, 7853.0], [82.8, 7871.0], [82.9, 7891.0], [83.0, 7905.0], [83.1, 7916.0], [83.2, 7924.0], [83.3, 7948.0], [83.4, 7967.0], [83.5, 7998.0], [83.6, 8017.0], [83.7, 8030.0], [83.8, 8068.0], [83.9, 8073.0], [84.0, 8083.0], [84.1, 8097.0], [84.2, 8111.0], [84.3, 8119.0], [84.4, 8124.0], [84.5, 8131.0], [84.6, 8169.0], [84.7, 8202.0], [84.8, 8226.0], [84.9, 8255.0], [85.0, 8279.0], [85.1, 8285.0], [85.2, 8365.0], [85.3, 8374.0], [85.4, 8405.0], [85.5, 8441.0], [85.6, 8459.0], [85.7, 8498.0], [85.8, 8534.0], [85.9, 8549.0], [86.0, 8565.0], [86.1, 8584.0], [86.2, 8616.0], [86.3, 8630.0], [86.4, 8651.0], [86.5, 8676.0], [86.6, 8682.0], [86.7, 8715.0], [86.8, 8725.0], [86.9, 8748.0], [87.0, 8763.0], [87.1, 8788.0], [87.2, 8815.0], [87.3, 8858.0], [87.4, 8887.0], [87.5, 8907.0], [87.6, 8954.0], [87.7, 8992.0], [87.8, 9017.0], [87.9, 9071.0], [88.0, 9084.0], [88.1, 9129.0], [88.2, 9154.0], [88.3, 9187.0], [88.4, 9218.0], [88.5, 9231.0], [88.6, 9254.0], [88.7, 9295.0], [88.8, 9310.0], [88.9, 9338.0], [89.0, 9358.0], [89.1, 9410.0], [89.2, 9473.0], [89.3, 9499.0], [89.4, 9559.0], [89.5, 9580.0], [89.6, 9611.0], [89.7, 9661.0], [89.8, 9673.0], [89.9, 9745.0], [90.0, 9755.0], [90.1, 9778.0], [90.2, 9791.0], [90.3, 9819.0], [90.4, 9849.0], [90.5, 9880.0], [90.6, 9889.0], [90.7, 9930.0], [90.8, 9939.0], [90.9, 9964.0], [91.0, 10006.0], [91.1, 10043.0], [91.2, 10062.0], [91.3, 10129.0], [91.4, 10158.0], [91.5, 10184.0], [91.6, 10226.0], [91.7, 10314.0], [91.8, 10345.0], [91.9, 10358.0], [92.0, 10391.0], [92.1, 10424.0], [92.2, 10529.0], [92.3, 10555.0], [92.4, 10589.0], [92.5, 10689.0], [92.6, 10733.0], [92.7, 10787.0], [92.8, 10823.0], [92.9, 10878.0], [93.0, 10975.0], [93.1, 11082.0], [93.2, 11115.0], [93.3, 11195.0], [93.4, 11258.0], [93.5, 11312.0], [93.6, 11443.0], [93.7, 11468.0], [93.8, 11526.0], [93.9, 11565.0], [94.0, 11590.0], [94.1, 11685.0], [94.2, 11730.0], [94.3, 11779.0], [94.4, 11851.0], [94.5, 11945.0], [94.6, 12017.0], [94.7, 12135.0], [94.8, 12158.0], [94.9, 12284.0], [95.0, 12310.0], [95.1, 12431.0], [95.2, 12578.0], [95.3, 12608.0], [95.4, 12723.0], [95.5, 12865.0], [95.6, 12921.0], [95.7, 12994.0], [95.8, 13099.0], [95.9, 13220.0], [96.0, 13295.0], [96.1, 13386.0], [96.2, 13567.0], [96.3, 13762.0], [96.4, 13798.0], [96.5, 13858.0], [96.6, 13954.0], [96.7, 14033.0], [96.8, 14219.0], [96.9, 14448.0], [97.0, 14579.0], [97.1, 14686.0], [97.2, 14783.0], [97.3, 15068.0], [97.4, 15298.0], [97.5, 15461.0], [97.6, 15530.0], [97.7, 15634.0], [97.8, 15800.0], [97.9, 16011.0], [98.0, 16133.0], [98.1, 16291.0], [98.2, 16317.0], [98.3, 16590.0], [98.4, 16838.0], [98.5, 17332.0], [98.6, 17862.0], [98.7, 18858.0], [98.8, 19511.0], [98.9, 19868.0], [99.0, 21847.0], [99.1, 22615.0], [99.2, 22830.0], [99.3, 25190.0], [99.4, 25798.0], [99.5, 27080.0], [99.6, 29727.0], [99.7, 34860.0], [99.8, 46119.0], [99.9, 65270.0], [100.0, 70044.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[0.0, 15.0], [0.1, 15.0], [0.2, 16.0], [0.3, 16.0], [0.4, 16.0], [0.5, 17.0], [0.6, 17.0], [0.7, 17.0], [0.8, 17.0], [0.9, 17.0], [1.0, 18.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 19.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 21.0], [2.5, 21.0], [2.6, 22.0], [2.7, 22.0], [2.8, 22.0], [2.9, 22.0], [3.0, 23.0], [3.1, 23.0], [3.2, 23.0], [3.3, 24.0], [3.4, 24.0], [3.5, 24.0], [3.6, 24.0], [3.7, 25.0], [3.8, 25.0], [3.9, 25.0], [4.0, 25.0], [4.1, 26.0], [4.2, 26.0], [4.3, 26.0], [4.4, 26.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 29.0], [5.3, 29.0], [5.4, 29.0], [5.5, 30.0], [5.6, 30.0], [5.7, 30.0], [5.8, 31.0], [5.9, 31.0], [6.0, 31.0], [6.1, 31.0], [6.2, 32.0], [6.3, 33.0], [6.4, 33.0], [6.5, 34.0], [6.6, 34.0], [6.7, 35.0], [6.8, 35.0], [6.9, 35.0], [7.0, 35.0], [7.1, 36.0], [7.2, 36.0], [7.3, 36.0], [7.4, 37.0], [7.5, 37.0], [7.6, 38.0], [7.7, 38.0], [7.8, 39.0], [7.9, 39.0], [8.0, 40.0], [8.1, 40.0], [8.2, 41.0], [8.3, 41.0], [8.4, 42.0], [8.5, 43.0], [8.6, 43.0], [8.7, 43.0], [8.8, 43.0], [8.9, 44.0], [9.0, 45.0], [9.1, 45.0], [9.2, 45.0], [9.3, 46.0], [9.4, 46.0], [9.5, 47.0], [9.6, 47.0], [9.7, 47.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 49.0], [10.2, 49.0], [10.3, 49.0], [10.4, 49.0], [10.5, 50.0], [10.6, 50.0], [10.7, 51.0], [10.8, 51.0], [10.9, 52.0], [11.0, 52.0], [11.1, 52.0], [11.2, 54.0], [11.3, 55.0], [11.4, 56.0], [11.5, 56.0], [11.6, 57.0], [11.7, 57.0], [11.8, 58.0], [11.9, 59.0], [12.0, 59.0], [12.1, 60.0], [12.2, 60.0], [12.3, 60.0], [12.4, 61.0], [12.5, 61.0], [12.6, 61.0], [12.7, 62.0], [12.8, 62.0], [12.9, 63.0], [13.0, 63.0], [13.1, 64.0], [13.2, 64.0], [13.3, 65.0], [13.4, 65.0], [13.5, 66.0], [13.6, 67.0], [13.7, 67.0], [13.8, 67.0], [13.9, 68.0], [14.0, 68.0], [14.1, 68.0], [14.2, 68.0], [14.3, 70.0], [14.4, 71.0], [14.5, 71.0], [14.6, 71.0], [14.7, 72.0], [14.8, 73.0], [14.9, 73.0], [15.0, 73.0], [15.1, 74.0], [15.2, 74.0], [15.3, 75.0], [15.4, 75.0], [15.5, 76.0], [15.6, 76.0], [15.7, 78.0], [15.8, 78.0], [15.9, 80.0], [16.0, 80.0], [16.1, 81.0], [16.2, 81.0], [16.3, 82.0], [16.4, 82.0], [16.5, 83.0], [16.6, 83.0], [16.7, 84.0], [16.8, 84.0], [16.9, 85.0], [17.0, 86.0], [17.1, 87.0], [17.2, 87.0], [17.3, 89.0], [17.4, 90.0], [17.5, 90.0], [17.6, 90.0], [17.7, 91.0], [17.8, 91.0], [17.9, 92.0], [18.0, 93.0], [18.1, 94.0], [18.2, 95.0], [18.3, 96.0], [18.4, 96.0], [18.5, 97.0], [18.6, 97.0], [18.7, 99.0], [18.8, 100.0], [18.9, 101.0], [19.0, 102.0], [19.1, 103.0], [19.2, 104.0], [19.3, 105.0], [19.4, 106.0], [19.5, 106.0], [19.6, 106.0], [19.7, 106.0], [19.8, 107.0], [19.9, 107.0], [20.0, 108.0], [20.1, 109.0], [20.2, 110.0], [20.3, 110.0], [20.4, 110.0], [20.5, 111.0], [20.6, 112.0], [20.7, 113.0], [20.8, 114.0], [20.9, 114.0], [21.0, 115.0], [21.1, 115.0], [21.2, 117.0], [21.3, 118.0], [21.4, 120.0], [21.5, 120.0], [21.6, 121.0], [21.7, 121.0], [21.8, 122.0], [21.9, 122.0], [22.0, 122.0], [22.1, 123.0], [22.2, 124.0], [22.3, 125.0], [22.4, 126.0], [22.5, 128.0], [22.6, 129.0], [22.7, 130.0], [22.8, 131.0], [22.9, 132.0], [23.0, 132.0], [23.1, 133.0], [23.2, 134.0], [23.3, 134.0], [23.4, 135.0], [23.5, 136.0], [23.6, 136.0], [23.7, 137.0], [23.8, 138.0], [23.9, 139.0], [24.0, 139.0], [24.1, 139.0], [24.2, 140.0], [24.3, 142.0], [24.4, 142.0], [24.5, 144.0], [24.6, 144.0], [24.7, 145.0], [24.8, 145.0], [24.9, 146.0], [25.0, 147.0], [25.1, 148.0], [25.2, 150.0], [25.3, 150.0], [25.4, 150.0], [25.5, 150.0], [25.6, 151.0], [25.7, 152.0], [25.8, 152.0], [25.9, 153.0], [26.0, 154.0], [26.1, 156.0], [26.2, 156.0], [26.3, 156.0], [26.4, 157.0], [26.5, 157.0], [26.6, 158.0], [26.7, 158.0], [26.8, 159.0], [26.9, 159.0], [27.0, 160.0], [27.1, 160.0], [27.2, 161.0], [27.3, 162.0], [27.4, 162.0], [27.5, 163.0], [27.6, 163.0], [27.7, 163.0], [27.8, 164.0], [27.9, 164.0], [28.0, 165.0], [28.1, 168.0], [28.2, 169.0], [28.3, 170.0], [28.4, 171.0], [28.5, 172.0], [28.6, 174.0], [28.7, 174.0], [28.8, 176.0], [28.9, 177.0], [29.0, 177.0], [29.1, 179.0], [29.2, 180.0], [29.3, 181.0], [29.4, 181.0], [29.5, 182.0], [29.6, 183.0], [29.7, 183.0], [29.8, 183.0], [29.9, 185.0], [30.0, 185.0], [30.1, 188.0], [30.2, 189.0], [30.3, 190.0], [30.4, 190.0], [30.5, 191.0], [30.6, 192.0], [30.7, 193.0], [30.8, 194.0], [30.9, 195.0], [31.0, 195.0], [31.1, 196.0], [31.2, 196.0], [31.3, 197.0], [31.4, 198.0], [31.5, 198.0], [31.6, 198.0], [31.7, 199.0], [31.8, 201.0], [31.9, 202.0], [32.0, 203.0], [32.1, 204.0], [32.2, 205.0], [32.3, 206.0], [32.4, 206.0], [32.5, 207.0], [32.6, 208.0], [32.7, 208.0], [32.8, 211.0], [32.9, 211.0], [33.0, 212.0], [33.1, 213.0], [33.2, 213.0], [33.3, 213.0], [33.4, 215.0], [33.5, 215.0], [33.6, 216.0], [33.7, 217.0], [33.8, 218.0], [33.9, 219.0], [34.0, 220.0], [34.1, 221.0], [34.2, 222.0], [34.3, 223.0], [34.4, 224.0], [34.5, 224.0], [34.6, 226.0], [34.7, 227.0], [34.8, 228.0], [34.9, 229.0], [35.0, 231.0], [35.1, 232.0], [35.2, 232.0], [35.3, 234.0], [35.4, 234.0], [35.5, 235.0], [35.6, 237.0], [35.7, 237.0], [35.8, 239.0], [35.9, 240.0], [36.0, 240.0], [36.1, 241.0], [36.2, 241.0], [36.3, 244.0], [36.4, 244.0], [36.5, 245.0], [36.6, 246.0], [36.7, 246.0], [36.8, 247.0], [36.9, 248.0], [37.0, 249.0], [37.1, 249.0], [37.2, 250.0], [37.3, 251.0], [37.4, 251.0], [37.5, 251.0], [37.6, 252.0], [37.7, 252.0], [37.8, 253.0], [37.9, 253.0], [38.0, 254.0], [38.1, 255.0], [38.2, 257.0], [38.3, 257.0], [38.4, 258.0], [38.5, 259.0], [38.6, 260.0], [38.7, 261.0], [38.8, 261.0], [38.9, 261.0], [39.0, 261.0], [39.1, 262.0], [39.2, 263.0], [39.3, 264.0], [39.4, 264.0], [39.5, 264.0], [39.6, 265.0], [39.7, 265.0], [39.8, 265.0], [39.9, 266.0], [40.0, 267.0], [40.1, 267.0], [40.2, 267.0], [40.3, 268.0], [40.4, 268.0], [40.5, 269.0], [40.6, 270.0], [40.7, 270.0], [40.8, 271.0], [40.9, 272.0], [41.0, 273.0], [41.1, 273.0], [41.2, 274.0], [41.3, 275.0], [41.4, 277.0], [41.5, 278.0], [41.6, 279.0], [41.7, 280.0], [41.8, 281.0], [41.9, 282.0], [42.0, 283.0], [42.1, 283.0], [42.2, 284.0], [42.3, 285.0], [42.4, 286.0], [42.5, 287.0], [42.6, 288.0], [42.7, 288.0], [42.8, 288.0], [42.9, 290.0], [43.0, 290.0], [43.1, 291.0], [43.2, 292.0], [43.3, 292.0], [43.4, 293.0], [43.5, 294.0], [43.6, 295.0], [43.7, 296.0], [43.8, 297.0], [43.9, 298.0], [44.0, 299.0], [44.1, 300.0], [44.2, 300.0], [44.3, 301.0], [44.4, 302.0], [44.5, 302.0], [44.6, 303.0], [44.7, 304.0], [44.8, 306.0], [44.9, 307.0], [45.0, 309.0], [45.1, 310.0], [45.2, 310.0], [45.3, 311.0], [45.4, 312.0], [45.5, 313.0], [45.6, 314.0], [45.7, 314.0], [45.8, 314.0], [45.9, 315.0], [46.0, 315.0], [46.1, 317.0], [46.2, 318.0], [46.3, 318.0], [46.4, 318.0], [46.5, 319.0], [46.6, 320.0], [46.7, 320.0], [46.8, 321.0], [46.9, 322.0], [47.0, 323.0], [47.1, 323.0], [47.2, 324.0], [47.3, 325.0], [47.4, 326.0], [47.5, 327.0], [47.6, 327.0], [47.7, 328.0], [47.8, 328.0], [47.9, 329.0], [48.0, 331.0], [48.1, 332.0], [48.2, 333.0], [48.3, 333.0], [48.4, 334.0], [48.5, 335.0], [48.6, 335.0], [48.7, 336.0], [48.8, 337.0], [48.9, 338.0], [49.0, 338.0], [49.1, 339.0], [49.2, 340.0], [49.3, 341.0], [49.4, 341.0], [49.5, 343.0], [49.6, 344.0], [49.7, 345.0], [49.8, 345.0], [49.9, 346.0], [50.0, 346.0], [50.1, 347.0], [50.2, 347.0], [50.3, 348.0], [50.4, 349.0], [50.5, 349.0], [50.6, 350.0], [50.7, 351.0], [50.8, 352.0], [50.9, 352.0], [51.0, 353.0], [51.1, 355.0], [51.2, 355.0], [51.3, 356.0], [51.4, 356.0], [51.5, 357.0], [51.6, 358.0], [51.7, 358.0], [51.8, 359.0], [51.9, 359.0], [52.0, 360.0], [52.1, 361.0], [52.2, 361.0], [52.3, 362.0], [52.4, 362.0], [52.5, 364.0], [52.6, 365.0], [52.7, 365.0], [52.8, 366.0], [52.9, 367.0], [53.0, 368.0], [53.1, 368.0], [53.2, 368.0], [53.3, 369.0], [53.4, 370.0], [53.5, 371.0], [53.6, 373.0], [53.7, 374.0], [53.8, 374.0], [53.9, 375.0], [54.0, 376.0], [54.1, 376.0], [54.2, 376.0], [54.3, 377.0], [54.4, 378.0], [54.5, 380.0], [54.6, 383.0], [54.7, 384.0], [54.8, 385.0], [54.9, 385.0], [55.0, 386.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 388.0], [55.5, 388.0], [55.6, 389.0], [55.7, 390.0], [55.8, 390.0], [55.9, 391.0], [56.0, 392.0], [56.1, 393.0], [56.2, 393.0], [56.3, 395.0], [56.4, 395.0], [56.5, 396.0], [56.6, 397.0], [56.7, 398.0], [56.8, 399.0], [56.9, 401.0], [57.0, 403.0], [57.1, 403.0], [57.2, 404.0], [57.3, 406.0], [57.4, 406.0], [57.5, 407.0], [57.6, 408.0], [57.7, 409.0], [57.8, 409.0], [57.9, 410.0], [58.0, 412.0], [58.1, 412.0], [58.2, 413.0], [58.3, 415.0], [58.4, 416.0], [58.5, 417.0], [58.6, 419.0], [58.7, 419.0], [58.8, 420.0], [58.9, 421.0], [59.0, 422.0], [59.1, 422.0], [59.2, 425.0], [59.3, 425.0], [59.4, 426.0], [59.5, 426.0], [59.6, 427.0], [59.7, 428.0], [59.8, 429.0], [59.9, 430.0], [60.0, 431.0], [60.1, 431.0], [60.2, 432.0], [60.3, 433.0], [60.4, 433.0], [60.5, 434.0], [60.6, 435.0], [60.7, 436.0], [60.8, 437.0], [60.9, 437.0], [61.0, 439.0], [61.1, 440.0], [61.2, 442.0], [61.3, 443.0], [61.4, 443.0], [61.5, 444.0], [61.6, 445.0], [61.7, 447.0], [61.8, 448.0], [61.9, 450.0], [62.0, 451.0], [62.1, 452.0], [62.2, 453.0], [62.3, 454.0], [62.4, 454.0], [62.5, 456.0], [62.6, 456.0], [62.7, 457.0], [62.8, 458.0], [62.9, 458.0], [63.0, 459.0], [63.1, 460.0], [63.2, 461.0], [63.3, 464.0], [63.4, 464.0], [63.5, 465.0], [63.6, 466.0], [63.7, 466.0], [63.8, 466.0], [63.9, 468.0], [64.0, 469.0], [64.1, 470.0], [64.2, 471.0], [64.3, 471.0], [64.4, 472.0], [64.5, 475.0], [64.6, 475.0], [64.7, 477.0], [64.8, 478.0], [64.9, 478.0], [65.0, 479.0], [65.1, 480.0], [65.2, 481.0], [65.3, 484.0], [65.4, 485.0], [65.5, 486.0], [65.6, 487.0], [65.7, 489.0], [65.8, 490.0], [65.9, 492.0], [66.0, 492.0], [66.1, 493.0], [66.2, 494.0], [66.3, 497.0], [66.4, 499.0], [66.5, 500.0], [66.6, 501.0], [66.7, 502.0], [66.8, 503.0], [66.9, 504.0], [67.0, 505.0], [67.1, 505.0], [67.2, 506.0], [67.3, 507.0], [67.4, 509.0], [67.5, 509.0], [67.6, 511.0], [67.7, 513.0], [67.8, 514.0], [67.9, 515.0], [68.0, 517.0], [68.1, 519.0], [68.2, 520.0], [68.3, 520.0], [68.4, 522.0], [68.5, 523.0], [68.6, 523.0], [68.7, 525.0], [68.8, 526.0], [68.9, 527.0], [69.0, 528.0], [69.1, 529.0], [69.2, 530.0], [69.3, 530.0], [69.4, 532.0], [69.5, 533.0], [69.6, 535.0], [69.7, 535.0], [69.8, 537.0], [69.9, 540.0], [70.0, 541.0], [70.1, 543.0], [70.2, 544.0], [70.3, 545.0], [70.4, 546.0], [70.5, 548.0], [70.6, 549.0], [70.7, 550.0], [70.8, 552.0], [70.9, 553.0], [71.0, 554.0], [71.1, 554.0], [71.2, 555.0], [71.3, 557.0], [71.4, 559.0], [71.5, 560.0], [71.6, 560.0], [71.7, 562.0], [71.8, 562.0], [71.9, 564.0], [72.0, 564.0], [72.1, 565.0], [72.2, 566.0], [72.3, 567.0], [72.4, 569.0], [72.5, 571.0], [72.6, 574.0], [72.7, 575.0], [72.8, 576.0], [72.9, 578.0], [73.0, 579.0], [73.1, 581.0], [73.2, 583.0], [73.3, 584.0], [73.4, 584.0], [73.5, 585.0], [73.6, 586.0], [73.7, 588.0], [73.8, 590.0], [73.9, 594.0], [74.0, 595.0], [74.1, 595.0], [74.2, 596.0], [74.3, 599.0], [74.4, 602.0], [74.5, 603.0], [74.6, 604.0], [74.7, 606.0], [74.8, 606.0], [74.9, 608.0], [75.0, 610.0], [75.1, 610.0], [75.2, 611.0], [75.3, 612.0], [75.4, 613.0], [75.5, 614.0], [75.6, 615.0], [75.7, 615.0], [75.8, 619.0], [75.9, 620.0], [76.0, 621.0], [76.1, 623.0], [76.2, 625.0], [76.3, 626.0], [76.4, 627.0], [76.5, 628.0], [76.6, 629.0], [76.7, 631.0], [76.8, 632.0], [76.9, 633.0], [77.0, 634.0], [77.1, 635.0], [77.2, 638.0], [77.3, 638.0], [77.4, 640.0], [77.5, 640.0], [77.6, 644.0], [77.7, 645.0], [77.8, 647.0], [77.9, 648.0], [78.0, 649.0], [78.1, 651.0], [78.2, 652.0], [78.3, 653.0], [78.4, 654.0], [78.5, 656.0], [78.6, 658.0], [78.7, 659.0], [78.8, 659.0], [78.9, 661.0], [79.0, 666.0], [79.1, 669.0], [79.2, 670.0], [79.3, 671.0], [79.4, 672.0], [79.5, 672.0], [79.6, 675.0], [79.7, 676.0], [79.8, 678.0], [79.9, 679.0], [80.0, 680.0], [80.1, 681.0], [80.2, 682.0], [80.3, 683.0], [80.4, 687.0], [80.5, 688.0], [80.6, 689.0], [80.7, 691.0], [80.8, 694.0], [80.9, 695.0], [81.0, 696.0], [81.1, 698.0], [81.2, 700.0], [81.3, 704.0], [81.4, 706.0], [81.5, 707.0], [81.6, 710.0], [81.7, 711.0], [81.8, 713.0], [81.9, 713.0], [82.0, 715.0], [82.1, 718.0], [82.2, 719.0], [82.3, 720.0], [82.4, 722.0], [82.5, 726.0], [82.6, 728.0], [82.7, 731.0], [82.8, 734.0], [82.9, 736.0], [83.0, 738.0], [83.1, 739.0], [83.2, 741.0], [83.3, 744.0], [83.4, 744.0], [83.5, 745.0], [83.6, 746.0], [83.7, 747.0], [83.8, 747.0], [83.9, 749.0], [84.0, 751.0], [84.1, 752.0], [84.2, 753.0], [84.3, 754.0], [84.4, 757.0], [84.5, 758.0], [84.6, 759.0], [84.7, 760.0], [84.8, 761.0], [84.9, 762.0], [85.0, 765.0], [85.1, 768.0], [85.2, 769.0], [85.3, 772.0], [85.4, 773.0], [85.5, 775.0], [85.6, 775.0], [85.7, 777.0], [85.8, 778.0], [85.9, 780.0], [86.0, 781.0], [86.1, 782.0], [86.2, 783.0], [86.3, 789.0], [86.4, 793.0], [86.5, 796.0], [86.6, 799.0], [86.7, 800.0], [86.8, 805.0], [86.9, 808.0], [87.0, 810.0], [87.1, 811.0], [87.2, 814.0], [87.3, 814.0], [87.4, 817.0], [87.5, 820.0], [87.6, 823.0], [87.7, 826.0], [87.8, 828.0], [87.9, 829.0], [88.0, 833.0], [88.1, 838.0], [88.2, 839.0], [88.3, 842.0], [88.4, 844.0], [88.5, 849.0], [88.6, 854.0], [88.7, 856.0], [88.8, 857.0], [88.9, 858.0], [89.0, 861.0], [89.1, 862.0], [89.2, 864.0], [89.3, 866.0], [89.4, 872.0], [89.5, 874.0], [89.6, 875.0], [89.7, 878.0], [89.8, 883.0], [89.9, 890.0], [90.0, 892.0], [90.1, 895.0], [90.2, 898.0], [90.3, 901.0], [90.4, 903.0], [90.5, 907.0], [90.6, 909.0], [90.7, 911.0], [90.8, 911.0], [90.9, 918.0], [91.0, 921.0], [91.1, 924.0], [91.2, 925.0], [91.3, 927.0], [91.4, 929.0], [91.5, 931.0], [91.6, 932.0], [91.7, 932.0], [91.8, 937.0], [91.9, 939.0], [92.0, 941.0], [92.1, 942.0], [92.2, 945.0], [92.3, 948.0], [92.4, 952.0], [92.5, 958.0], [92.6, 960.0], [92.7, 964.0], [92.8, 969.0], [92.9, 969.0], [93.0, 972.0], [93.1, 976.0], [93.2, 986.0], [93.3, 988.0], [93.4, 992.0], [93.5, 999.0], [93.6, 1003.0], [93.7, 1006.0], [93.8, 1007.0], [93.9, 1012.0], [94.0, 1022.0], [94.1, 1023.0], [94.2, 1033.0], [94.3, 1035.0], [94.4, 1040.0], [94.5, 1041.0], [94.6, 1054.0], [94.7, 1058.0], [94.8, 1061.0], [94.9, 1065.0], [95.0, 1069.0], [95.1, 1078.0], [95.2, 1091.0], [95.3, 1096.0], [95.4, 1101.0], [95.5, 1107.0], [95.6, 1116.0], [95.7, 1125.0], [95.8, 1133.0], [95.9, 1136.0], [96.0, 1144.0], [96.1, 1151.0], [96.2, 1157.0], [96.3, 1162.0], [96.4, 1166.0], [96.5, 1172.0], [96.6, 1181.0], [96.7, 1191.0], [96.8, 1206.0], [96.9, 1217.0], [97.0, 1238.0], [97.1, 1248.0], [97.2, 1251.0], [97.3, 1260.0], [97.4, 1266.0], [97.5, 1273.0], [97.6, 1282.0], [97.7, 1285.0], [97.8, 1287.0], [97.9, 1305.0], [98.0, 1310.0], [98.1, 1322.0], [98.2, 1330.0], [98.3, 1346.0], [98.4, 1353.0], [98.5, 1371.0], [98.6, 1392.0], [98.7, 1405.0], [98.8, 1415.0], [98.9, 1433.0], [99.0, 1458.0], [99.1, 1495.0], [99.2, 1528.0], [99.3, 1591.0], [99.4, 1632.0], [99.5, 1651.0], [99.6, 1764.0], [99.7, 1871.0], [99.8, 2206.0], [99.9, 4398.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 552.0, "series": [{"data": [[100.0, 23.0], [200.0, 21.0], [300.0, 25.0], [400.0, 43.0], [500.0, 54.0], [600.0, 48.0], [700.0, 59.0], [800.0, 57.0], [900.0, 73.0], [1000.0, 79.0], [1100.0, 85.0], [1200.0, 82.0], [1300.0, 78.0], [1400.0, 67.0], [1500.0, 67.0], [1600.0, 74.0], [1700.0, 68.0], [1800.0, 88.0], [1900.0, 100.0], [2000.0, 74.0], [2100.0, 66.0], [2200.0, 79.0], [2300.0, 64.0], [2400.0, 80.0], [2500.0, 77.0], [2600.0, 60.0], [2700.0, 68.0], [2800.0, 61.0], [2900.0, 65.0], [3000.0, 57.0], [3100.0, 60.0], [3200.0, 53.0], [3300.0, 54.0], [3400.0, 61.0], [3500.0, 49.0], [3600.0, 60.0], [3700.0, 44.0], [3800.0, 40.0], [3900.0, 51.0], [4000.0, 45.0], [4100.0, 33.0], [4300.0, 32.0], [4200.0, 30.0], [4600.0, 37.0], [4500.0, 36.0], [4400.0, 27.0], [4700.0, 25.0], [4800.0, 20.0], [5000.0, 27.0], [5100.0, 15.0], [4900.0, 17.0], [5200.0, 14.0], [5300.0, 9.0], [5400.0, 9.0], [5600.0, 7.0], [5500.0, 13.0], [5800.0, 6.0], [5700.0, 5.0], [6000.0, 11.0], [6100.0, 4.0], [5900.0, 14.0], [6300.0, 7.0], [6200.0, 4.0], [6400.0, 4.0], [6500.0, 5.0], [6600.0, 6.0], [6700.0, 4.0], [6900.0, 5.0], [6800.0, 1.0], [7000.0, 3.0], [7100.0, 3.0], [7200.0, 2.0], [7400.0, 1.0], [7600.0, 6.0], [7900.0, 2.0], [7800.0, 3.0], [8100.0, 4.0], [8000.0, 2.0], [8700.0, 1.0], [8500.0, 1.0], [8200.0, 1.0], [8600.0, 1.0], [8400.0, 1.0], [8300.0, 1.0], [9200.0, 2.0], [9100.0, 2.0], [8900.0, 1.0], [9000.0, 3.0], [8800.0, 1.0], [9300.0, 3.0], [9600.0, 3.0], [9400.0, 1.0], [9800.0, 3.0], [10000.0, 3.0], [10200.0, 2.0], [10500.0, 2.0], [10600.0, 1.0], [10300.0, 2.0], [11000.0, 2.0], [10800.0, 1.0], [11200.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [11600.0, 1.0], [11300.0, 2.0], [11800.0, 2.0], [12400.0, 1.0], [12700.0, 1.0], [13200.0, 2.0], [12900.0, 1.0], [13100.0, 1.0], [13700.0, 1.0], [13400.0, 1.0], [17900.0, 1.0], [19400.0, 1.0], [19000.0, 1.0], [19600.0, 2.0], [36200.0, 1.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[100.0, 19.0], [36100.0, 1.0], [46100.0, 1.0], [200.0, 38.0], [300.0, 44.0], [400.0, 49.0], [500.0, 44.0], [600.0, 48.0], [700.0, 33.0], [800.0, 40.0], [900.0, 21.0], [1000.0, 36.0], [1100.0, 32.0], [1200.0, 38.0], [1300.0, 37.0], [1400.0, 28.0], [1500.0, 40.0], [1600.0, 45.0], [1700.0, 24.0], [1800.0, 37.0], [1900.0, 30.0], [2000.0, 24.0], [2100.0, 41.0], [2200.0, 42.0], [2300.0, 34.0], [2400.0, 25.0], [2500.0, 36.0], [2600.0, 20.0], [2700.0, 35.0], [2800.0, 34.0], [2900.0, 38.0], [3000.0, 28.0], [3100.0, 37.0], [3200.0, 37.0], [3300.0, 35.0], [3400.0, 44.0], [3500.0, 43.0], [3600.0, 31.0], [3700.0, 36.0], [3800.0, 38.0], [3900.0, 33.0], [4000.0, 38.0], [4100.0, 35.0], [4300.0, 42.0], [4200.0, 35.0], [4500.0, 44.0], [4400.0, 39.0], [4600.0, 33.0], [69700.0, 1.0], [4800.0, 29.0], [4700.0, 32.0], [5100.0, 40.0], [5000.0, 37.0], [4900.0, 38.0], [5300.0, 31.0], [5200.0, 31.0], [5400.0, 30.0], [5500.0, 37.0], [5600.0, 32.0], [5700.0, 30.0], [5800.0, 25.0], [6000.0, 25.0], [6100.0, 33.0], [5900.0, 31.0], [6200.0, 25.0], [6300.0, 37.0], [6600.0, 18.0], [6500.0, 26.0], [6400.0, 33.0], [6700.0, 25.0], [6900.0, 26.0], [6800.0, 24.0], [7100.0, 21.0], [7000.0, 17.0], [7400.0, 17.0], [7300.0, 25.0], [7200.0, 23.0], [7600.0, 29.0], [7500.0, 18.0], [7900.0, 17.0], [7700.0, 18.0], [7800.0, 21.0], [8100.0, 17.0], [8000.0, 19.0], [8600.0, 14.0], [8400.0, 11.0], [8700.0, 16.0], [8500.0, 15.0], [8200.0, 13.0], [8300.0, 7.0], [8900.0, 11.0], [8800.0, 7.0], [9200.0, 14.0], [9100.0, 9.0], [9000.0, 8.0], [9600.0, 8.0], [9300.0, 9.0], [9400.0, 7.0], [9700.0, 13.0], [9500.0, 7.0], [10100.0, 9.0], [9800.0, 11.0], [9900.0, 11.0], [10000.0, 9.0], [10200.0, 3.0], [10600.0, 2.0], [10500.0, 9.0], [10400.0, 4.0], [10700.0, 7.0], [10300.0, 11.0], [10800.0, 6.0], [11100.0, 5.0], [11200.0, 3.0], [11000.0, 6.0], [10900.0, 2.0], [11700.0, 8.0], [11500.0, 8.0], [11400.0, 5.0], [11600.0, 3.0], [11300.0, 4.0], [12100.0, 5.0], [11900.0, 4.0], [12200.0, 4.0], [12000.0, 3.0], [11800.0, 1.0], [12400.0, 3.0], [12700.0, 3.0], [12600.0, 3.0], [12300.0, 3.0], [12500.0, 4.0], [13100.0, 2.0], [12800.0, 4.0], [12900.0, 4.0], [13200.0, 4.0], [13300.0, 3.0], [13000.0, 3.0], [13500.0, 3.0], [13700.0, 5.0], [13800.0, 4.0], [13600.0, 1.0], [13900.0, 4.0], [14200.0, 2.0], [14000.0, 2.0], [14100.0, 1.0], [14400.0, 3.0], [14600.0, 3.0], [14700.0, 2.0], [14500.0, 3.0], [14900.0, 1.0], [15000.0, 3.0], [15100.0, 1.0], [15200.0, 1.0], [15800.0, 2.0], [15600.0, 4.0], [15400.0, 3.0], [15500.0, 4.0], [15700.0, 1.0], [16300.0, 2.0], [16200.0, 3.0], [16100.0, 3.0], [15900.0, 1.0], [16000.0, 2.0], [16600.0, 2.0], [16400.0, 1.0], [16800.0, 1.0], [17800.0, 1.0], [18800.0, 2.0], [19600.0, 1.0], [19800.0, 1.0], [20000.0, 1.0], [21400.0, 1.0], [21800.0, 1.0], [22600.0, 1.0], [22800.0, 1.0], [26200.0, 1.0], [26600.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [29200.0, 1.0], [31400.0, 1.0], [34800.0, 1.0], [40000.0, 1.0], [48000.0, 1.0], [65200.0, 2.0], [66200.0, 1.0], [16900.0, 2.0], [16500.0, 2.0], [17300.0, 1.0], [17700.0, 1.0], [17900.0, 1.0], [17500.0, 1.0], [19100.0, 1.0], [18700.0, 1.0], [19500.0, 1.0], [19700.0, 1.0], [22300.0, 1.0], [22500.0, 1.0], [22700.0, 2.0], [22900.0, 1.0], [23100.0, 1.0], [25100.0, 1.0], [25500.0, 1.0], [25700.0, 2.0], [29700.0, 1.0], [31100.0, 1.0], [70000.0, 1.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[0.0, 552.0], [600.0, 202.0], [700.0, 161.0], [800.0, 106.0], [900.0, 96.0], [1000.0, 55.0], [1100.0, 39.0], [1200.0, 35.0], [1300.0, 23.0], [1400.0, 13.0], [1500.0, 6.0], [100.0, 382.0], [1600.0, 6.0], [1700.0, 5.0], [1800.0, 1.0], [1900.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [3100.0, 1.0], [200.0, 364.0], [4300.0, 1.0], [4600.0, 1.0], [300.0, 376.0], [4700.0, 1.0], [400.0, 284.0], [500.0, 232.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 70000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4738.0, "series": [{"data": [[0.0, 2224.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1997.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4738.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.050432276657062, "minX": 1.62435264E12, "maxY": 100.0, "series": [{"data": [[1.62435288E12, 100.0], [1.62435276E12, 99.31558726673973], [1.62435294E12, 95.18208373904577], [1.62435264E12, 17.050432276657062], [1.62435282E12, 100.0], [1.6243527E12, 60.614558472553746]], "isOverall": false, "label": "Performance Test Pelaporan", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62435294E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.0, "maxY": 15580.0, "series": [{"data": [[2.0, 273.25], [3.0, 324.0], [4.0, 2253.8], [5.0, 2552.2], [6.0, 396.0], [7.0, 392.8333333333333], [8.0, 3000.875], [9.0, 355.44444444444446], [10.0, 629.8000000000001], [11.0, 694.0], [12.0, 585.8000000000001], [13.0, 703.4999999999999], [14.0, 765.1249999999999], [15.0, 764.0], [16.0, 743.75], [17.0, 2294.142857142857], [18.0, 1266.9], [19.0, 1157.8], [20.0, 1003.8571428571429], [21.0, 1196.333333333333], [22.0, 1381.5], [23.0, 1207.3], [24.0, 1114.6666666666667], [25.0, 1682.111111111111], [26.0, 1621.2222222222222], [27.0, 1610.1000000000001], [28.0, 1648.4285714285716], [29.0, 1558.875], [30.0, 1841.3076923076922], [31.0, 1527.4444444444443], [32.0, 1847.6666666666667], [33.0, 2242.5], [34.0, 1930.9333333333334], [35.0, 1819.0], [36.0, 1369.5714285714287], [37.0, 2098.4545454545455], [38.0, 2129.5], [39.0, 2590.833333333333], [40.0, 2565.4285714285716], [41.0, 1677.875], [42.0, 2911.5555555555557], [43.0, 3260.545454545454], [44.0, 2361.5], [45.0, 2630.125], [46.0, 2775.909090909091], [47.0, 3081.1428571428573], [48.0, 2881.7272727272725], [49.0, 3323.5], [50.0, 3525.333333333334], [51.0, 3031.25], [52.0, 3190.818181818182], [53.0, 2671.0], [54.0, 2250.833333333334], [55.0, 3134.636363636364], [56.0, 2771.1], [57.0, 2869.166666666667], [58.0, 2637.2], [59.0, 2988.071428571428], [60.0, 3222.8571428571427], [61.0, 3202.6666666666665], [62.0, 3147.6], [63.0, 2795.0], [64.0, 3295.3333333333335], [65.0, 3264.0000000000005], [66.0, 4144.142857142858], [67.0, 1680.0], [68.0, 2788.1333333333337], [69.0, 1407.125], [70.0, 1815.5], [71.0, 1208.4], [72.0, 2466.5833333333335], [73.0, 2022.1875000000002], [74.0, 2672.9999999999995], [75.0, 2297.4285714285716], [76.0, 3823.125], [77.0, 3389.875], [78.0, 2289.0], [79.0, 2365.0], [80.0, 2896.4545454545455], [81.0, 1818.9], [82.0, 2537.4444444444443], [83.0, 2236.230769230769], [84.0, 1787.3333333333333], [85.0, 3163.3333333333326], [86.0, 2094.5], [87.0, 2083.1666666666665], [88.0, 1805.0909090909092], [89.0, 1283.3000000000002], [90.0, 1921.4444444444443], [91.0, 1756.8333333333333], [92.0, 1947.428571428571], [93.0, 1961.5], [94.0, 2571.625], [95.0, 2293.9999999999995], [96.0, 2974.166666666667], [97.0, 3175.0], [98.0, 3196.3076923076924], [99.0, 3143.6], [100.0, 3006.1726791726824], [1.0, 191.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[85.78633916554523, 2765.05148048452]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc-Aggregated", "isController": false}, {"data": [[2.0, 2880.2], [3.0, 8926.25], [4.0, 417.14285714285717], [5.0, 325.1666666666667], [6.0, 686.625], [7.0, 1635.0], [8.0, 565.25], [9.0, 708.2], [10.0, 893.0000000000001], [11.0, 1323.4999999999998], [12.0, 739.9], [13.0, 922.4615384615383], [14.0, 1409.5], [15.0, 718.5882352941178], [16.0, 1729.0], [17.0, 923.0], [18.0, 757.230769230769], [19.0, 1850.4], [20.0, 906.8823529411764], [21.0, 1178.3333333333335], [22.0, 1136.090909090909], [23.0, 944.0], [24.0, 1208.75], [25.0, 642.0], [26.0, 2075.4285714285716], [27.0, 1238.2], [28.0, 1360.090909090909], [29.0, 955.2], [30.0, 2110.0], [31.0, 1055.6666666666665], [32.0, 681.6666666666666], [33.0, 3173.0], [34.0, 1856.642857142857], [35.0, 1154.4666666666667], [36.0, 1347.7142857142858], [37.0, 2289.125], [38.0, 1311.8461538461538], [39.0, 3285.416666666667], [40.0, 1133.3333333333333], [41.0, 2477.5454545454545], [42.0, 1338.0], [43.0, 1014.2], [44.0, 1398.4615384615386], [45.0, 1537.75], [46.0, 1457.4166666666665], [47.0, 2739.5], [48.0, 1301.3846153846155], [49.0, 1730.5], [50.0, 1355.0], [51.0, 1341.25], [52.0, 2012.8181818181818], [53.0, 2193.777777777778], [54.0, 1940.4615384615383], [55.0, 1777.0000000000002], [56.0, 3217.5], [57.0, 2217.0], [58.0, 2677.0], [59.0, 1721.8], [60.0, 2634.0833333333335], [61.0, 2739.363636363637], [62.0, 2372.4], [63.0, 3532.75], [64.0, 4033.0], [65.0, 3770.6], [66.0, 4166.4], [67.0, 3315.1249999999995], [68.0, 4157.875], [69.0, 4332.6], [70.0, 4610.777777777777], [71.0, 4635.375], [72.0, 4350.857142857142], [73.0, 6369.307692307692], [74.0, 2846.5], [75.0, 3815.6250000000005], [76.0, 3443.4], [77.0, 5074.833333333333], [78.0, 4050.2000000000003], [79.0, 5231.249999999999], [80.0, 4874.909090909091], [81.0, 5452.888888888889], [82.0, 4145.499999999999], [83.0, 4441.428571428572], [84.0, 4713.5], [85.0, 6908.4], [86.0, 7355.333333333334], [87.0, 5159.75], [88.0, 5311.909090909091], [89.0, 5468.538461538462], [90.0, 5595.833333333334], [91.0, 4692.285714285714], [92.0, 8870.699999999999], [93.0, 6920.4285714285725], [94.0, 6369.874999999999], [95.0, 6690.6], [96.0, 4777.7], [97.0, 7001.2], [98.0, 6383.0], [99.0, 6554.4], [100.0, 6196.2811900191955], [1.0, 15580.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[84.61781137035823, 5185.164640157745]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true-Aggregated", "isController": false}, {"data": [[2.0, 66.0], [3.0, 30.6], [4.0, 51.5], [5.0, 151.25], [6.0, 73.22222222222223], [7.0, 96.83333333333333], [8.0, 29.285714285714285], [9.0, 123.5], [10.0, 75.22222222222223], [11.0, 251.66666666666666], [12.0, 123.99999999999999], [13.0, 266.49999999999994], [14.0, 322.1111111111111], [15.0, 270.0], [16.0, 100.0], [17.0, 635.4285714285714], [18.0, 231.875], [19.0, 469.4], [20.0, 319.25000000000006], [21.0, 303.125], [22.0, 378.55555555555554], [23.0, 430.0], [24.0, 447.0], [25.0, 372.25], [26.0, 666.8333333333334], [27.0, 483.0], [28.0, 472.42857142857144], [29.0, 647.3], [30.0, 430.1428571428571], [31.0, 588.0], [32.0, 704.1666666666667], [33.0, 516.875], [34.0, 472.71428571428567], [35.0, 579.6666666666665], [36.0, 536.6], [37.0, 512.2307692307692], [38.0, 325.8333333333333], [39.0, 347.6], [40.0, 795.6], [41.0, 937.8750000000001], [42.0, 623.1], [43.0, 577.6666666666667], [44.0, 817.6923076923076], [45.0, 1332.3333333333333], [46.0, 763.9473684210526], [47.0, 502.3333333333333], [48.0, 835.9000000000001], [49.0, 1101.0], [50.0, 807.6153846153845], [51.0, 941.4545454545454], [52.0, 631.2352941176472], [53.0, 659.1666666666666], [54.0, 745.5], [55.0, 674.0769230769231], [56.0, 662.9000000000001], [57.0, 823.8571428571429], [58.0, 1033.9090909090908], [59.0, 667.5], [60.0, 809.3], [61.0, 930.4285714285714], [62.0, 662.9285714285713], [63.0, 723.3636363636364], [64.0, 859.75], [65.0, 293.59999999999997], [66.0, 162.5], [67.0, 99.375], [68.0, 115.83333333333333], [69.0, 191.2], [70.0, 113.66666666666667], [71.0, 281.2], [72.0, 390.4], [73.0, 341.0], [74.0, 621.2222222222222], [75.0, 338.4375], [76.0, 316.69999999999993], [77.0, 87.42857142857143], [78.0, 39.333333333333336], [79.0, 389.16666666666663], [80.0, 287.8], [81.0, 212.42857142857144], [82.0, 250.16666666666666], [83.0, 149.45454545454544], [84.0, 308.0], [85.0, 127.07692307692304], [86.0, 168.125], [87.0, 212.57142857142858], [88.0, 192.33333333333334], [89.0, 244.8181818181818], [90.0, 330.0], [91.0, 247.0], [92.0, 195.625], [93.0, 196.0], [94.0, 464.4], [95.0, 148.875], [96.0, 305.0], [97.0, 460.5], [98.0, 311.5], [99.0, 524.0000000000001], [100.0, 416.2356902356903], [1.0, 23.0]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}, {"data": [[86.17752885268162, 422.0397148676165]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7540.116666666667, "minX": 1.62435264E12, "maxY": 2650277.3833333333, "series": [{"data": [[1.62435288E12, 2612049.5166666666], [1.62435276E12, 2609295.6333333333], [1.62435294E12, 1530472.5833333333], [1.62435264E12, 996546.3666666667], [1.62435282E12, 2650277.3833333333], [1.6243527E12, 2384420.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62435288E12, 20165.066666666666], [1.62435276E12, 19799.483333333334], [1.62435294E12, 11158.033333333333], [1.62435264E12, 7540.116666666667], [1.62435282E12, 20495.633333333335], [1.6243527E12, 18213.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62435294E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 312.22466960352415, "minX": 1.62435264E12, "maxY": 6459.509646302252, "series": [{"data": [[1.62435288E12, 3092.484602917344], [1.62435276E12, 2829.3399668325014], [1.62435294E12, 3265.6312684365776], [1.62435264E12, 998.768558951965], [1.62435282E12, 2962.0349761526218], [1.6243527E12, 2530.9747747747747]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[1.62435288E12, 6143.453074433656], [1.62435276E12, 6459.509646302252], [1.62435294E12, 6152.6378378378395], [1.62435264E12, 575.0336134453785], [1.62435282E12, 6235.4219745222845], [1.6243527E12, 2883.2592592592605]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[1.62435288E12, 364.09677419354836], [1.62435276E12, 375.725293132328], [1.62435294E12, 495.54402515723297], [1.62435264E12, 312.22466960352415], [1.62435282E12, 454.98412698412744], [1.6243527E12, 502.13537906137213]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62435294E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 312.1850220264318, "minX": 1.62435264E12, "maxY": 1714.1063063063075, "series": [{"data": [[1.62435288E12, 1220.7017828200978], [1.62435276E12, 932.4626865671645], [1.62435294E12, 1441.6843657817108], [1.62435264E12, 918.4017467248907], [1.62435282E12, 1309.1462639109704], [1.6243527E12, 1714.1063063063075]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[1.62435288E12, 510.81067961165047], [1.62435276E12, 398.93890675241175], [1.62435294E12, 524.3702702702708], [1.62435264E12, 330.44957983193274], [1.62435282E12, 534.4394904458597], [1.6243527E12, 582.989417989418]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[1.62435288E12, 364.09354838709646], [1.62435276E12, 375.713567839196], [1.62435294E12, 495.54402515723297], [1.62435264E12, 312.1850220264318], [1.62435282E12, 454.9714285714284], [1.6243527E12, 502.12454873646266]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62435294E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62435264E12, "maxY": 30.34683954619127, "series": [{"data": [[1.62435288E12, 30.34683954619127], [1.62435276E12, 27.72139303482588], [1.62435294E12, 20.778761061946902], [1.62435264E12, 0.0], [1.62435282E12, 24.446740858505578], [1.6243527E12, 2.9225225225225206]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc", "isController": false}, {"data": [[1.62435288E12, 0.7491909385113272], [1.62435276E12, 8.70096463022508], [1.62435294E12, 4.35945945945946], [1.62435264E12, 7.05882352941176], [1.62435282E12, 3.176751592356694], [1.6243527E12, 12.05467372134038]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true", "isController": false}, {"data": [[1.62435288E12, 6.959677419354839], [1.62435276E12, 14.50753768844221], [1.62435294E12, 20.720125786163507], [1.62435264E12, 0.0], [1.62435282E12, 8.088888888888887], [1.6243527E12, 2.722021660649821]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62435294E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.62435264E12, "maxY": 70044.0, "series": [{"data": [[1.62435288E12, 70044.0], [1.62435276E12, 66291.0], [1.62435294E12, 69720.0], [1.62435264E12, 2773.0], [1.62435282E12, 40028.0], [1.6243527E12, 16998.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62435288E12, 7513.400000000001], [1.62435276E12, 7722.0], [1.62435294E12, 7331.4], [1.62435264E12, 1308.5], [1.62435282E12, 7154.200000000001], [1.6243527E12, 4628.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62435288E12, 16456.360000000044], [1.62435276E12, 16112.989999999998], [1.62435294E12, 17429.40000000004], [1.62435264E12, 2322.1], [1.62435282E12, 15430.299999999988], [1.6243527E12, 9264.52]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62435288E12, 10046.799999999996], [1.62435276E12, 9813.749999999996], [1.62435294E12, 9933.8], [1.62435264E12, 1625.0], [1.62435282E12, 9066.899999999998], [1.6243527E12, 5473.049999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62435288E12, 16.0], [1.62435276E12, 15.0], [1.62435294E12, 18.0], [1.62435264E12, 16.0], [1.62435282E12, 16.0], [1.6243527E12, 15.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62435288E12, 2205.0], [1.62435276E12, 2203.0], [1.62435294E12, 2625.0], [1.62435264E12, 470.5], [1.62435282E12, 2330.0], [1.6243527E12, 1322.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62435294E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 191.0, "minX": 1.0, "maxY": 65270.0, "series": [{"data": [[32.0, 1578.5], [33.0, 1953.0], [2.0, 12450.5], [34.0, 1513.0], [35.0, 2271.0], [37.0, 1971.0], [36.0, 2116.0], [39.0, 1841.5], [38.0, 2598.0], [40.0, 1902.5], [41.0, 1669.0], [42.0, 2469.0], [43.0, 2253.0], [44.0, 1859.0], [45.0, 1864.0], [46.0, 1354.0], [3.0, 191.0], [50.0, 1923.0], [52.0, 1664.0], [7.0, 6351.0], [11.0, 512.0], [13.0, 216.0], [15.0, 264.0], [16.0, 1275.5], [1.0, 46119.0], [17.0, 1117.0], [18.0, 1330.0], [19.0, 1700.0], [20.0, 1548.0], [21.0, 1340.0], [22.0, 730.0], [23.0, 1605.0], [24.0, 1756.5], [25.0, 1279.0], [26.0, 1588.0], [27.0, 1570.0], [28.0, 2166.0], [29.0, 1850.0], [30.0, 1466.0], [31.0, 1924.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 65270.0], [46.0, 65218.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 52.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 99.0, "minX": 1.0, "maxY": 924.0, "series": [{"data": [[32.0, 482.5], [33.0, 510.0], [2.0, 747.5], [34.0, 504.0], [35.0, 546.0], [37.0, 554.0], [36.0, 605.0], [39.0, 347.5], [38.0, 501.5], [40.0, 553.5], [41.0, 507.5], [42.0, 437.0], [43.0, 402.5], [44.0, 463.5], [45.0, 875.0], [46.0, 610.0], [3.0, 163.0], [50.0, 436.0], [52.0, 396.0], [7.0, 850.0], [11.0, 497.0], [13.0, 99.0], [15.0, 177.0], [16.0, 329.0], [1.0, 281.0], [17.0, 924.0], [18.0, 563.5], [19.0, 440.0], [20.0, 423.5], [21.0, 503.0], [22.0, 301.5], [23.0, 519.0], [24.0, 445.5], [25.0, 485.0], [26.0, 439.5], [27.0, 443.0], [28.0, 380.0], [29.0, 488.0], [30.0, 497.5], [31.0, 706.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[34.0, 450.0], [46.0, 531.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 52.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.066666666666666, "minX": 1.62435264E12, "maxY": 31.45, "series": [{"data": [[1.62435288E12, 30.916666666666668], [1.62435276E12, 30.533333333333335], [1.62435294E12, 15.45], [1.62435264E12, 12.066666666666666], [1.62435282E12, 31.45], [1.6243527E12, 28.933333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62435294E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.62435264E12, "maxY": 31.416666666666668, "series": [{"data": [[1.62435282E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.62435288E12, 30.916666666666668], [1.62435276E12, 30.366666666666667], [1.62435294E12, 17.116666666666667], [1.62435264E12, 11.566666666666666], [1.62435282E12, 31.416666666666668], [1.6243527E12, 27.933333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62435294E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.62435264E12, "maxY": 10.5, "series": [{"data": [[1.62435288E12, 10.3], [1.62435276E12, 10.366666666666667], [1.62435294E12, 6.166666666666667], [1.62435264E12, 3.966666666666667], [1.62435282E12, 10.433333333333334], [1.6243527E12, 9.45]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true-success", "isController": false}, {"data": [[1.62435282E12, 0.03333333333333333]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=true-failure", "isController": false}, {"data": [[1.62435288E12, 10.283333333333333], [1.62435276E12, 10.05], [1.62435294E12, 5.65], [1.62435264E12, 3.816666666666667], [1.62435282E12, 10.483333333333333], [1.6243527E12, 9.25]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/cases?address_district_code=&address_subdistrict_code=&address_village_code=&status=&author=&page=1&limit=30&search=&verified_status=pending&sort=updatedAt:asc-success", "isController": false}, {"data": [[1.62435288E12, 10.333333333333334], [1.62435276E12, 9.95], [1.62435294E12, 5.3], [1.62435264E12, 3.783333333333333], [1.62435282E12, 10.5], [1.6243527E12, 9.233333333333333]], "isOverall": false, "label": "api.pelaporan.pikobar.jabarprov.go.id/api/areas/hospital?rs_jabar=false-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62435294E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.62435264E12, "maxY": 31.416666666666668, "series": [{"data": [[1.62435288E12, 30.916666666666668], [1.62435276E12, 30.366666666666667], [1.62435294E12, 17.116666666666667], [1.62435264E12, 11.566666666666666], [1.62435282E12, 31.416666666666668], [1.6243527E12, 27.933333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62435282E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62435294E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

